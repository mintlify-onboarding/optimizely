{
        "openapi": "3.0.1",
        "info": {
            "title": "Optimizely Campaign REST API",
            "description": "This documentation lists all available resources and endpoints of the Optimizely Campaign REST API. The REST API lets you integrate Optimizely Campaign with your business applications and third-party software. Use Optimizely Campaign features and functionalities remotely to manage your recipient data, campaigns and mailings.<br><br>To use the REST API, set up your Optimizely Campaign client first. See <a href=\"https://world.optimizely.com/documentation/developer-guides/campaign/rest-api/getting-started/#client\" target=\"_blank\">Client setup</a> on Optimizely World.<br><br>The base URL for all API requests is as follows: <i>https://api.campaign.episerver.net/rest/{clientId}/{component}/{path}?{parameters}</i><br><br><b>Try it out</b><br>The \"Try it out\" feature lets you test the API before you implement it in the target system. To perform real API requests against your client, authorize with your Base64-encoded credentials. See <a href=\"https://world.optimizely.com/documentation/developer-guides/campaign/rest-api/getting-started/#auth\" target=\"_blank\">Authentication</a> on Optimizely World.<br><br>To learn more about the Optimizely Campaign REST API, see <a href=\"https://world.optimizely.com/documentation/developer-guides/campaign/rest-api\" target=\"_blank\">Optimizely World</a>.<br><br>",
            "version": "1"
        },
        "servers": [
            {
                "url": "https://127.0.0.1:8447/rest"
            }
        ],
        "tags": [
            {
                "name": "Assets",
                "description": "Manage assets"
            },
            {
                "name": "Attachments",
                "description": "Manage email attachments"
            },
            {
                "name": "Personalized Attachments",
                "description": "Manage personalized email attachments"
            },
            {
                "name": "Blocklist entries",
                "description": "Manage recipients on the blocklist"
            },
            {
                "name": "Confirmations",
                "description": "Manage registration confirmations (opt-in emails)"
            },
            {
                "name": "Smart Campaigns",
                "description": "Manage Smart Campaigns"
            },
            {
                "name": "Transactional mails",
                "description": "Manage transactional mails that are triggered by a recipient action or event"
            },
            {
                "name": "Click profiles",
                "description": "Manage click profiles"
            },
            {
                "name": "Coupon blocks",
                "description": "Manage coupon blocks that organize coupon codes"
            },
            {
                "name": "Custom blocklists",
                "description": "Manage custom blocklists"
            },
            {
                "name": "Scheduled jobs",
                "description": "Get information about scheduled jobs"
            },
            {
                "name": "Folders",
                "description": "Manage folders for mailings, message templates and custom blacklists"
            },
            {
                "name": "Mail archive",
                "description": "Get archived mailings"
            },
            {
                "name": "Mail ID",
                "description": "Get information about a mail ID"
            },
            {
                "name": "Message templates",
                "description": "Manage message templates"
            },
            {
                "name": "Opt-in processes",
                "description": "View, update and create opt-in processes"
            },
            {
                "name": "Recipient lists",
                "description": "View, copy and update recipient lists"
            },
            {
                "name": "Recipients",
                "description": "Manage recipients or delete recipient history"
            },
            {
                "name": "Responses",
                "description": "Manage mailing responses, such as hard or soft bounces"
            },
            {
                "name": "Unsubscribes",
                "description": "Manage recipients on an unsubscribe list"
            },
            {
                "name": "Users",
                "description": "User Management"
            },
            {
                "name": "Webhooks",
                "description": "Manage webhooks"
            }
        ],
        "paths": {
            "/{clientId}/assets/images/count": {
                "get": {
                    "tags": [
                        "Assets"
                    ],
                    "summary": "Get the total number of images",
                    "operationId": "count",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The total number was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/assets/images": {
                "get": {
                    "tags": [
                        "Assets"
                    ],
                    "summary": "Get information about all images",
                    "description": "Get detailed information about all images, such as ID, name, URL, height and width in pixels. You can limit the number of retrieved images and set the starting point of the result list.",
                    "operationId": "getAllImages",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved images<p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The images were retrieved successfully (empty result if none were found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestImageStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestImageStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Assets"
                    ],
                    "summary": "Upload an image",
                    "description": "Upload an image either by specifying a file or URL.",
                    "operationId": "createImage",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "multipart/form-data": {
                                "schema": {
                                    "$ref": "#/components/schemas/RestMultiPartRequestSchema"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The image was uploaded successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestImage"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestImage"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The parameters \"name\" or \"url\" are both provided or not provided, or the file name is missing."
                        },
                        "500": {
                            "description": "Error occurred while uploading the image."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/assets/images/{imageId}": {
                "get": {
                    "tags": [
                        "Assets"
                    ],
                    "summary": "Get information about an image",
                    "description": "Get detailed information about an image, such as name, URL, height and width in pixels.",
                    "operationId": "getImage",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "imageId",
                            "in": "path",
                            "description": "Image ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The image was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestImage"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestImage"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The image could not be found. Ensure that the required parameters such as \"imageId\" are correct and the image exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Assets"
                    ],
                    "summary": "Update the image name",
                    "operationId": "updateImage",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "imageId",
                            "in": "path",
                            "description": "Image ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "required": [
                                        "name"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "New image name"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "New name of image was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestImage"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestImage"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The parameter \"name\" is missing."
                        },
                        "404": {
                            "description": "The image could not be found. Ensure that the required parameters such as \"imageId\" are correct and the image exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Assets"
                    ],
                    "summary": "Delete an image",
                    "operationId": "deleteImage",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "imageId",
                            "in": "path",
                            "description": "Image ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The image was deleted successfully."
                        },
                        "404": {
                            "description": "The image could not be found. Ensure that the required parameters such as \"imageId\" are correct and the image exists."
                        },
                        "500": {
                            "description": "Error occurred while deleting uploaded images."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/attachments/count": {
                "get": {
                    "tags": [
                        "Attachments"
                    ],
                    "summary": "Get the total number of attachments",
                    "operationId": "count_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The total number was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/attachments": {
                "get": {
                    "tags": [
                        "Attachments"
                    ],
                    "summary": "Get information about all attachments",
                    "description": "Get detailed information about all attachments, such as type, mime type, size or creation date. You can sort the result by specific criteria and limit the maximum number of retrieved attachments.",
                    "operationId": "getAllAttachments",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved attachments<p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "default": "ASC",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "description": "Sort result by specific criteria",
                            "schema": {
                                "type": "string",
                                "default": "created",
                                "enum": [
                                    "id",
                                    "mailingGroup",
                                    "name",
                                    "uploaded",
                                    "url",
                                    "fileName",
                                    "type",
                                    "mimeType",
                                    "size",
                                    "created",
                                    "modified"
                                ]
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The attachments were retrieved successfully (empty result if none were found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttachmentStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttachmentStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Attachments"
                    ],
                    "summary": "Create an attachment",
                    "description": "Create an attachment. You can specify name, mime type or attachment file.",
                    "operationId": "createAttachment",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "multipart/form-data": {
                                "schema": {
                                    "$ref": "#/components/schemas/RestMultiPartRequestSchema"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The attachment was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttachment"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttachment"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The parameters \"name\" and \"file\" are required or the file name has an invalid extension. Ensure that \"name\" and \"file\" parameters are added to the request and the file extension is correct."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/attachments/{attachmentId}/content": {
                "get": {
                    "tags": [
                        "Attachments"
                    ],
                    "summary": "Get the content of an uploaded attachment",
                    "operationId": "getUploadAttachment",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "attachmentId",
                            "in": "path",
                            "description": "Attachment ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The uploaded content attachment was downloaded successfully.",
                            "content": {
                                "application/octet-stream": {
                                    "schema": {
                                        "type": "object"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The attachment could not be found. Ensure that the required parameters such as \"attachmentId\" are correct and the attachment exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Attachments"
                    ],
                    "summary": "Update the content of an uploaded attachment",
                    "operationId": "uploadAttachment",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "attachmentId",
                            "in": "path",
                            "description": "Attachment ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "multipart/form-data": {
                                "schema": {
                                    "$ref": "#/components/schemas/RestMultiPartRequestSchema"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The attachment content was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttachment"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttachment"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The attachment could not be found. Ensure that the required parameters such as \"attachmentId\" are correct and the attachment exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/attachments/{attachmentId}": {
                "get": {
                    "tags": [
                        "Attachments"
                    ],
                    "summary": "Get information about an attachment",
                    "description": "Get detailed information about an attachment, such as type, mime type, size or creation date.",
                    "operationId": "getAttachment",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "attachmentId",
                            "in": "path",
                            "description": "Attachment ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The attachment was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttachment"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttachment"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Attachments"
                    ],
                    "summary": "Update attachment information",
                    "description": "Update attachment information. You can specify name, file name or mime type.",
                    "operationId": "updateAttachment",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "attachmentId",
                            "in": "path",
                            "description": "Attachment ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttachmentRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The attachment was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttachment"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttachment"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The attachment could not be found. Ensure that the required parameters such as \"attachmentId\" are correct and the attachment exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Attachments"
                    ],
                    "summary": "Delete an attachment",
                    "operationId": "deleteAttachment",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "attachmentId",
                            "in": "path",
                            "description": "Attachment ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The attachment was deleted successfully."
                        },
                        "404": {
                            "description": "The attachment could not be found. Ensure that the required parameters such as \"attachmentId\" are correct and the attachment exists."
                        },
                        "409": {
                            "description": "The attachment is being used by at least one mailing and can not be deleted"
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/attachments/personalized": {
                "post": {
                    "tags": [
                        "Personalized Attachments",
                        "Attachments"
                    ],
                    "summary": "Create a personalized attachment",
                    "description": "Create a personalized attachment. You can specify the attachment name and attachment file(s).",
                    "operationId": "createAttachment_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "multipart/form-data": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiPartRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The attachment was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestPersonalizedAttachmentUpload"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestPersonalizedAttachmentUpload"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "An erroneous request was sent."
                        },
                        "406": {
                            "description": "The uploaded file is empty."
                        },
                        "500": {
                            "description": "The request could not be processed successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/blacklistentries/blacklisted": {
                "get": {
                    "tags": [
                        "Blocklist entries"
                    ],
                    "summary": "Check whether an address is blocklisted",
                    "operationId": "blacklisted",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "address",
                            "in": "query",
                            "description": "Address to be checked",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "true/false as result",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlacklistedEntry"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlacklistedEntry"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/blacklistentries/count": {
                "get": {
                    "tags": [
                        "Blocklist entries"
                    ],
                    "summary": "Get the total number of blocklist entries",
                    "description": "Get the total number of blocklist entries. You can choose whether to include or exclude parent clients.",
                    "operationId": "count_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "includeParent",
                            "in": "query",
                            "description": "Include parent clients in the counting<p><i>Default value</i> : false</p>",
                            "schema": {
                                "type": "boolean"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The number of blocklist entries was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/blacklistentries": {
                "get": {
                    "tags": [
                        "Blocklist entries"
                    ],
                    "summary": "Get information about all blocklist entries",
                    "description": "Get detailed information about all blocklist entries, such as pattern, reason or creation date. You can limit the maximum number of retrieved blocklist entries and sort the result by specific criteria.",
                    "operationId": "findAllBlacklistEntries",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved blocklist entries<p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "pattern",
                            "in": "query",
                            "description": "Matching pattern",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "reason",
                            "in": "query",
                            "description": "Matching reason",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "schema": {
                                "type": "string",
                                "description": "Sort result by specific criteria",
                                "default": "created",
                                "enum": [
                                    "pattern",
                                    "reason",
                                    "created",
                                    "modified"
                                ]
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The blocklist entries were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlacklistEntryStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlacklistEntryStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Blocklist entries"
                    ],
                    "summary": "Create a blocklist entry",
                    "description": "Create a blocklist entry. You can specify a reason for blocklisting.",
                    "operationId": "createBlacklistEntry",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlacklistEntryRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The blocklist entry was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlacklistEntry"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlacklistEntry"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "A required value for the entry is not provided. Check for the blocklist entry pattern and add it to the request."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Blocklist entries"
                    ],
                    "summary": "Delete multiple blocklist entries",
                    "operationId": "deleteBlacklistEntries",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "entries",
                            "in": "query",
                            "description": "List of blocklist entry patterns<p><b>Note:</b> If the blocklist entry pattern contains special characters, the pattern must be URL-encoded. For example, use the code %2f for a forward slash (/), %252f for a double slash (//), %2B for a plus sign (+) etc.</p>",
                            "required": true,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The deletion was initiated successfully."
                        },
                        "400": {
                            "description": "The list of entries is not provided or the number of entries has exceeded the limit. Provide an array with blocklist entries or limit the number of entries to a maximum of 1000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/blacklistentries/{entry}": {
                "get": {
                    "tags": [
                        "Blocklist entries"
                    ],
                    "summary": "Get information about a blocklist entry",
                    "description": "Get detailed information about a blocklist entry, such as pattern, reason for blocklisting or creation date.",
                    "operationId": "getBlacklistEntry",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "entry",
                            "in": "path",
                            "description": "Blocklist entry pattern<p><b>Note:</b> If the blocklist entry pattern contains special characters, the pattern must be URL-encoded. For example, use the code %2f for a forward slash (/), %252f for a double slash (//), %2B for a plus sign (+) etc.</p>",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The blocklist entry was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlacklistEntry"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlacklistEntry"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The blocklist entry could not be found. Ensure that the required parameters such as \"entry\" are correct and the blocklist entry exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Blocklist entries"
                    ],
                    "summary": "Delete a blocklist entry",
                    "operationId": "deleteBlacklistEntry",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "entry",
                            "in": "path",
                            "description": "Blocklist entry pattern<p><b>Note:</b> If the blocklist entry pattern contains special characters, the pattern must be URL-encoded. For example, use the code %2f for a forward slash (/), %252f for a double slash (//), %2B for a plus sign (+) etc.</p>",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The blocklist entry was deleted successfully."
                        },
                        "404": {
                            "description": "The blocklist entry could not be found. Ensure that the required parameter is correct and the blocklist entry exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations": {
                "get": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Get information about all confirmation mailings",
                    "description": "Get detailed information about all confirmation mailings, such as status, type or creation date. You can filter mailings by media type and sort the result by specific criteria.",
                    "operationId": "selectConfirmationMailings",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of confirmation mailings<p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "mediaType",
                            "in": "query",
                            "description": "Filter mailings by media type<p><i>Available values</i> : email, sms, letter, push</p>",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "resultView",
                            "in": "query",
                            "description": "Choose whether to retrieve a DETAILED view including all nodes (messages, recipient lists, target groups) or a SUMMARY of metadata.<p><b>Note:</b> The more campaigns you have, the more time the detailed view takes to load.</p>",
                            "schema": {
                                "type": "string",
                                "default": "SUMMARY",
                                "enum": [
                                    "SUMMARY",
                                    "DETAILED"
                                ]
                            }
                        },
                        {
                            "name": "status",
                            "in": "query",
                            "description": "Filter mailings by status<p><i>Available values</i> : invalid, activationRequired, activated, canceled, paused, running, finished</p>",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "folderId",
                            "in": "query",
                            "description": "Filter mailings assigned to a folder",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "description": "Sort result by specific criteria",
                            "schema": {
                                "type": "string",
                                "default": "created",
                                "enum": [
                                    "id",
                                    "name",
                                    "description",
                                    "status",
                                    "created",
                                    "modified",
                                    "started",
                                    "finished"
                                ]
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "A list of all confirmation mailings was retrieved (empty if none exists).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaignStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaignStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Create a confirmation mail",
                    "operationId": "createConfirmationMailing",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfirmationMailingRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Confirmation mail was created successfully",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Request parameters were not valid"
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations/{confirmationMailId}": {
                "get": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Get information about a confirmation mailing",
                    "description": "Get detailed information about a confirmation mailing, such as type, status or creation date.",
                    "operationId": "getConfirmationMailing",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The confirmation mailing was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The confirmation mailing could not be found. Ensure that the required parameters such as \"confirmationMailId\" are correct and the confirmation mailing exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Delete a confirmation mailing",
                    "operationId": "deleteConfirmationMailing",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The confirmation mailing was deleted successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations/{confirmationMailId}/message": {
                "post": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Update a mailing",
                    "description": "Update information of a mailing, such as name, subject or content.",
                    "operationId": "updateCampaignMessage",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The mailing was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations/{confirmationMailId}/message/content": {
                "get": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Get the content of a mailing (email)",
                    "description": "Get the content of a mailing (email) and define the content type to be delivered.",
                    "operationId": "getCampaignMessageContent",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Accept",
                            "in": "header",
                            "description": "Controls which content type is used <p><i>Available values</i> : text/plain, text/html<p><i>Default value</i> : text/plain</p><p>Does not work with the \"Try it out\" feature.</p>",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The content of the mailing (in the indicated content type) was retrieved successfully."
                        },
                        "404": {
                            "description": "No content could be found for the indicated content type. Ensure that the \"Accept\" parameter has the correct content type and the content exists. "
                        },
                        "406": {
                            "description": "The content type is not supported. Ensure that the \"Accept\" parameter has the correct content type."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations/{confirmationMailId}/message/test/{testMailingId}": {
                "get": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Get information about the sending status of all recipients of a test mailing",
                    "description": "Get detailed information about the sending status of all recipients of a test mailing, such as enqueued, sending, sent or failed.",
                    "operationId": "getTestMailingReport",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "testMailingId",
                            "in": "path",
                            "description": "Test mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The report was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingReport"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingReport"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations/{confirmationMailId}/message/tracking/links/{trackingLinkId}": {
                "get": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Get information about a tracking link of a mailing",
                    "description": "Get detailed information about a tracking link of a mailing, such as ID, URL or link occurrences in the text version.",
                    "operationId": "getTrackingLink",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "trackingLinkId",
                            "in": "path",
                            "description": "Tracking link ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The tracking link was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingLink"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingLink"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Update the tracking link configuration of a mailing",
                    "operationId": "updateLinkTracking",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "trackingLinkId",
                            "in": "path",
                            "description": "Tracking link ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackingLinkConfigurationRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The tracking link configuration was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingLink"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingLink"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations/{confirmationMailId}/message/tracking/links": {
                "get": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Get information about all tracking links of a mailing",
                    "description": "Get detailed information about all tracking links of a mailing, such as ID, URL or link occurrences in the text version.",
                    "operationId": "getTrackingLinks",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The tracking links were retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestTrackingLink"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestTrackingLink"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The number of tracking links exceeded the maximum of 3000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations/{confirmationMailId}/message/tracking": {
                "get": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Get information about the tracking configuration of a mailing",
                    "operationId": "getTrackingConfiguration",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The tracking configuration was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingConfiguration"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingConfiguration"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Update the tracking configuration of a mailing",
                    "operationId": "updateTrackingConfiguration",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackingConfigurationRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The tracking configuration was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingConfiguration"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingConfiguration"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations/{confirmationMailId}/recipientLists": {
                "get": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Get information about a \"Recipients\" node",
                    "description": "Get detailed information about a \"Recipients\" node, such as node ID, successor node ID or grid location.",
                    "operationId": "getRecipientListsNodeForSCMailing",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The \"Recipients\" node was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListsNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListsNode"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The \"Recipients\" node could not be found. Ensure that the required parameters such as \"campaignId\" or \"nodeId\" are correct and the \"Recipients\" node exists. "
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Create or update a \"Recipients\" node",
                    "description": "Create or update a \"Recipients\" node. The \"recipientListIds\" parameter is only required for updating.",
                    "operationId": "createOrUpdateRecipientListsNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipientListsRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The \"Recipient\" node was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListsNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListsNode"
                                    }
                                }
                            }
                        },
                        "201": {
                            "description": "The \"Recipient\" node was created successfully."
                        },
                        "404": {
                            "description": "The \"Recipient\" node could not be found. Ensure that the required parameters such as \"campaignId\" or \"recipientListIds\" are correct and the \"Recipients\" node exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations/{confirmationMailId}/test/{testMailingId}": {
                "get": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Get information about the sending status of all recipients of a test mailing",
                    "description": "Get detailed information about the sending status of all recipients of a test mailing, such as enqueued, sending, sent or failed.",
                    "operationId": "getTestMailingReport_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "testMailingId",
                            "in": "path",
                            "description": "Test mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The report was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingReport"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingReport"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations/{confirmationMailId}/test": {
                "post": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Send a test mailing",
                    "description": "Send a test mailing to check content, layout or target groups before sending the actual mailing.",
                    "operationId": "startTestMailing_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestMailingRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "202": {
                            "description": "The test message was sent successfully. The response contains a report on the recipients included in the test mailing (check \"validRecipientAddresses\" field).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingStartedReport"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingStartedReport"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "At least one request parameter is not valid"
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations/{confirmationMailId}/report": {
                "get": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Get a campaign report",
                    "description": "Get a detailed campaign report containing information such as number of recipients, opens, clicks, bounces or unsubscribes.",
                    "operationId": "getReport",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The report was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/CampaignMailingRestReport"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/CampaignMailingRestReport"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations/{confirmationMailId}/start": {
                "post": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Start a confirmation mailing",
                    "operationId": "startConfirmationMailing",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The confirmation mailing was started successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/confirmations/{confirmationMailId}/stop": {
                "post": {
                    "tags": [
                        "Confirmations"
                    ],
                    "summary": "Stop a confirmation mailing",
                    "operationId": "stopConfirmationMailing",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "confirmationMailId",
                            "in": "path",
                            "description": "Confirmation mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The Confirmation mailing was stopped successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about all Smart Campaigns",
                    "description": "Get detailed information about all Smart Campaigns, such as mailing IDs and the date and time of creation.",
                    "operationId": "selectSmartCampaigns",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved campaigns <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "mediaType",
                            "in": "query",
                            "description": "Filter mailings by media type<p><i>Available values</i> : email, sms, letter, push</p>",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "resultView",
                            "in": "query",
                            "description": "Choose whether to retrieve a DETAILED view including all nodes (messages, recipient lists, target groups) or a SUMMARY of metadata.<p><b>Note:</b> The more campaigns you have, the more time the detailed view takes to load.</p>",
                            "schema": {
                                "type": "string",
                                "default": "SUMMARY",
                                "enum": [
                                    "SUMMARY",
                                    "DETAILED"
                                ]
                            }
                        },
                        {
                            "name": "status",
                            "in": "query",
                            "description": "Filter mailings by status<p><i>Available values</i> : invalid, activationRequired, activated, canceled, paused, running, finished</p>",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "folderId",
                            "in": "query",
                            "description": "Filter mailings assigned to a folder",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "description": "Sort result by specific criteria",
                            "schema": {
                                "type": "string",
                                "default": "created",
                                "enum": [
                                    "id",
                                    "name",
                                    "description",
                                    "status",
                                    "created",
                                    "modified",
                                    "started",
                                    "finished"
                                ]
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The Smart Campaigns were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaignStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaignStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Create or copy a Smart Campaign",
                    "operationId": "createOrCopySmartCampaign",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The Smart Campaign was created or copied successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/activate": {
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Activate a Smart Campaign",
                    "description": "Activate a Smart Campaign. The Smart Campaign will change status to \"Activated\".",
                    "operationId": "activateSmartCampaign",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The Smart Campaign was activated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The Smart Campaign could not be activated because it must be in status \"Activation required\"."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/deactivate": {
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Deactivate a Smart Campaign",
                    "description": "Deactivate a Smart Campaign. The Smart Campaign will change status to \"Activation required\".",
                    "operationId": "deactivateSmartCampaign",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The Smart Campaign was deactivated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The Smart Campaign could not be deactivated because it must be in status \"Activated\"."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about a Smart Campaign",
                    "description": "Get detailed information about a Smart Campaign, such as status, starting date, finishing date or node IDs.",
                    "operationId": "getSmartCampaign",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The Smart Campaign was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Update the name of a Smart Campaign",
                    "operationId": "updateCampaignMessage_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "New campaign name"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The Smart Campaign name was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Delete a Smart Campaign",
                    "operationId": "deleteSmartCampaign",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The Smart Campaign was deleted successfully."
                        },
                        "400": {
                            "description": "The Smart Campaign #\" + campaignMailing.getMailingId() + \" cannot be deleted as it contains already started messages."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/abtest": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about a \"A/B test\" node of a Smart Campaign",
                    "description": "Get detailed information about a \"A/B test\" node of a Smart Campaign, such as mode (e.g. best open rate, best click rate), scheduled time or fallback.",
                    "operationId": "getSplitNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The \"A/B test\" node was retrieved successfully (empty response if no \"A/B test\" node was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSplitNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSplitNode"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The \"A/B test\" node could not be found in the Smart Campaign. Ensure that the required parameters such as \"campaignId\" are correct and the \"A/B test\" node exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Create or update an \"A/B test\" node of a Smart Campaign",
                    "description": "Create or update an \"A/B test\" node of a Smart Campaign. You can enable and specify optimization mode and set predecessor and successor node.",
                    "operationId": "createOrUpdateSplitNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/SplitRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The \"A/B test\" node was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSplitNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSplitNode"
                                    }
                                }
                            }
                        },
                        "201": {
                            "description": "The \"A/B test\" node was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSplitNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSplitNode"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Delete an \"A/B test\" node of a Smart Campaign",
                    "operationId": "deleteSplitNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The \"A/B test\" node of the Smart Campaign was deleted successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/abtest/successors/{nodeId}": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about a connection from an \"A/B test\" node",
                    "description": "Get detailed information about a connection from an \"A/B test\" node to other nodes, such as target group or relative or absolute number of recipients.",
                    "operationId": "getSuccessor",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "nodeId",
                            "in": "path",
                            "description": "Successor node ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The connection was retrieved successfully (empty response if no successor node was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSplitSuccessor"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSplitSuccessor"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The successor node could not be found. Ensure that the required parameters such as \"campaignId\" or \"nodeId\" are correct and the successor node exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Create or update a connection from a \"A/B test\" node",
                    "description": "Create or update a connection from a \"A/B test\" node. You can specify target groups or predecessor and successor node.",
                    "operationId": "createOrUpdateSuccessorEdge",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "nodeId",
                            "in": "path",
                            "description": "Successor node ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/SplitSuccessorRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The \"A/B test\" connection was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSplitSuccessor"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSplitSuccessor"
                                    }
                                }
                            }
                        },
                        "201": {
                            "description": "The \"A/B test\" connection was created successfully."
                        },
                        "404": {
                            "description": "The \"A/B test\" successor node could not be found. Ensure that the required parameters such as \"campaignId\" or \"nodeId\" are correct and the successor node exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Delete a connection from a \"A/B test\" node to another node",
                    "operationId": "deleteSuccessorEdge",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "nodeId",
                            "in": "path",
                            "description": "Successor node ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The connection to the successor node was deleted successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/abtest/successors": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about all connections from an \"A/B test\" node",
                    "description": "Get detailed information about all connections from an \"A/B test\" node to other nodes, such as target group or relative or absolute number of recipients.",
                    "operationId": "findSuccessors",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The connections were retrieved successfully (empty response if no successor node was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestSplitSuccessor"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestSplitSuccessor"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Delete all connections from the \"A/B test\" node to other nodes",
                    "operationId": "deleteSuccessorEdges",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "All connections from the \"A/B test\" node were deleted successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/analysis": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get analysis data of a Smart Campaign",
                    "description": "Get detailed analysis data of a Smart Campaign, such as start date of the analysis, current state of the analysis or the number of mailing recipients.",
                    "operationId": "getAnalysisData",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The analysis data was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAnalysisData"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAnalysisData"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The analysis data could not be retrieved because the analysis is not finished or was not started."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Schedule new recipient analysis for a Smart Campaign",
                    "operationId": "scheduleAnalysis",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "202": {
                            "description": "The recipient analysis was scheduled."
                        },
                        "400": {
                            "description": "The request is invalid. The recipient analysis cannot be started."
                        },
                        "409": {
                            "description": "The maximum number of simultaneously running campaign analyses was reached."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Cancel a running recipient analysis of a Smart Campaign",
                    "operationId": "cancelAnalysis",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The recipient analysis of the Smart Campaign was cancelled successfully."
                        },
                        "404": {
                            "description": "There is no recipient analysis for the specified Smart Campaign."
                        },
                        "409": {
                            "description": "The recipient analysis of the Smart Campaign could not be cancelled because it is not running."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/block": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about a \"Block\" node of a Smart Campaign",
                    "description": "Get detailed information about a \"Block\" node of a Smart Campaign, such as custom blacklist IDs or node ID.",
                    "operationId": "getBlockNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The \"Block\" node was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlockNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlockNode"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The \"Block\" node could not be found. Ensure that the required parameters such as \"campaignId\" are correct and the \"Block\" node exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Create or update a \"Block\" node of a Smart Campaign",
                    "description": "Create or update a \"Block\" node of a Smart Campaign, such as custom blacklist IDs or predecessor and successor node.",
                    "operationId": "createOrUpdateBlockNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlockRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The \"Block\" node was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlockNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlockNode"
                                    }
                                }
                            }
                        },
                        "201": {
                            "description": "The \"Block\" node was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlockNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBlockNode"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid request. Limit the number of \"customblacklistIds\" (default maximum is three)."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Delete a \"Block\" node of a Smart Campaign",
                    "operationId": "deleteBlockNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The \"Block\" node was deleted successfully."
                        },
                        "404": {
                            "description": "The \"Block\" node could not be found in the Smart Campaign. Ensure that the required parameters such as \"campaignId\" are correct and the \"Block\" node exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/cap": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about a \"Limit\" node of a Smart Campaign",
                    "description": "Get detailed information about a \"Limit\" node of a Smart Campaign, such as relative or absolute number of recipients or node ID.",
                    "operationId": "getCapNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The \"Limit\" node was retrieved successfully (empty response if no \"Limit\" node was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCapNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCapNode"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Create or update a \"Limit\" node of a Smart Campaign",
                    "description": "Create or update a \"Limit\" node of a Smart Campaign, such as relative or absolute number of recipients or predecessor and successor node.",
                    "operationId": "createOrUpdateCapNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/CapRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The \"Limit\" node was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCapNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCapNode"
                                    }
                                }
                            }
                        },
                        "201": {
                            "description": "The \"Limit\" node was created successfully."
                        },
                        "400": {
                            "description": "Invalid request. Use either \"relative\" or \"absolute\" parameter."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Delete a \"Limit\" node of a Smart Campaign",
                    "operationId": "deleteCapNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The \"Limit\" node was deleted successfully."
                        },
                        "404": {
                            "description": "The \"Limit\" node could not be found in the Smart Campaign. Ensure that the required parameters such as \"campaignId\" are correct and the \"Limit\" node exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/messages": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about all mailings of a Smart Campaign",
                    "operationId": "getMessages",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The mailings of given Smart Campaign were retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestMessageNode"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestMessageNode"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Create a mailing",
                    "description": "Create a Smart Campaign mailing and specify information such as sender address, name, content (plain text) or media code.",
                    "operationId": "createCampaignMessage",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The mailing was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/messages/{mailingId}": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about a mailing",
                    "description": "Get detailed information about a mailing of a Smart Campaign, such as status, format, type or creation date.",
                    "operationId": "getSmartCampaignMessage_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The mailing was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Update a mailing",
                    "description": "Update information of a mailing, such as name, subject or content.",
                    "operationId": "updateCampaignMessage_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The mailing was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Delete a mailing",
                    "description": "Delete a mailing that was created in Smart Campaigns.",
                    "operationId": "deleteCampaignMessage_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The mailing was deleted successfully."
                        },
                        "409": {
                            "description": "The mailing could not be deleted because the Smart Campaign must be in status \"New\". Please check the status of the campaign to which the mailing belongs."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/messages/{mailingId}/content": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get the content of a mailing (email)",
                    "description": "Get the content of a mailing (email) and define the content type to be delivered.",
                    "operationId": "getCampaignMessageContent_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Accept",
                            "in": "header",
                            "description": "Controls which content type is used <p><i>Available values</i> : text/plain, text/html<p><i>Default value</i> : text/plain</p><p>Does not work with the \"Try it out\" feature.</p>",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The content of the mailing (in the indicated content type) was retrieved successfully."
                        },
                        "404": {
                            "description": "No content could be found for the indicated content type. Ensure that the \"Accept\" parameter has the correct content type and the content exists. "
                        },
                        "406": {
                            "description": "The content type is not supported. Ensure that the \"Accept\" parameter has the correct content type."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Update the content of a mailing",
                    "description": "Update the content of a mailing. You can transmit plain text, html, or multipart content that consists of HTML and plain text. See <a href=\"https://world.episerver.com/blogs/philipp-gaska/dates/2021/6/updating-mailing-content-via-rest-api\" target=\"_blank\">Updating mailing content via REST API</a> on Optimizely World. <b>Note</b>: You can only update the content of mailings created via REST API. This operation is also not suitable for confirmation mailings.",
                    "operationId": "storeCampaignMessageContent_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "multipart/form-data": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The mailing content was updated successfully."
                        },
                        "409": {
                            "description": "The mailing content could not be updated because of a general error."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Delete the content of a mailing (email)",
                    "operationId": "removeContentFromCampaignMessage_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The mailing content was deleted successfully."
                        },
                        "400": {
                            "description": "The mailing content cannot be deleted because the mailing is not in status \"New\". Please check the mailing status."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/messages/{mailingId}/test/{testMailingId}": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about the sending status of all recipients of a test mailing",
                    "description": "Get detailed information about the sending status of all recipients of a test mailing, such as enqueued, sending, sent or failed.",
                    "operationId": "getTestMailingReport_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "testMailingId",
                            "in": "path",
                            "description": "Test mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The report was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingReport"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingReport"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/messages/{mailingId}/test": {
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Send a test mailing",
                    "description": "Send a test mailing to check content, layout or target groups before sending the actual mailing.",
                    "operationId": "startTestMailing_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestMailingRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "202": {
                            "description": "The test message was sent successfully. The response contains a report on the recipients included in the test mailing (check \"validRecipientAddresses\" field).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingStartedReport"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingStartedReport"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "At least one request parameter is not valid"
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/messages/{mailingId}/tracking/links/{trackingLinkId}": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about a tracking link of a mailing",
                    "description": "Get detailed information about a tracking link of a mailing, such as ID, URL or link occurrences in the text version.",
                    "operationId": "getTrackingLink_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "trackingLinkId",
                            "in": "path",
                            "description": "Tracking link ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The tracking link was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingLink"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingLink"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Update the tracking link configuration of a mailing",
                    "operationId": "updateLinkTracking_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "trackingLinkId",
                            "in": "path",
                            "description": "Tracking link ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackingLinkConfigurationRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The tracking link configuration was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingLink"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingLink"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/messages/{mailingId}/tracking/links": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about all tracking links of a mailing",
                    "description": "Get detailed information about all tracking links of a mailing, such as ID, URL or link occurrences in the text version.",
                    "operationId": "getTrackingLinks_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The tracking links were retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestTrackingLink"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestTrackingLink"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The number of tracking links exceeded the maximum of 3000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/messages/{mailingId}/tracking": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about the tracking configuration of a mailing",
                    "operationId": "getTrackingConfiguration_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The tracking configuration was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingConfiguration"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingConfiguration"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Update the tracking configuration of a mailing",
                    "operationId": "updateTrackingConfiguration_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackingConfigurationRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The tracking configuration was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingConfiguration"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingConfiguration"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/messages/{mailingId}/pause": {
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Pause a mailing",
                    "description": "Pause a mailing that is part of a Smart Campaign.",
                    "operationId": "pauseCampaignMessage_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The mailing was paused successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The mailing could not be paused because the Smart Campaign must be in status \"Sending\". Please check the status of the campaign to which the mailing belongs."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/messages/{mailingId}/start": {
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Start a mailing",
                    "description": "Start a mailing that is part of a Smart Campaign. The Smart Campaign to which the mailing belongs must be in status \"Activated\" or \"Paused\".",
                    "operationId": "startCampaignMessage_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The mailing was started successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The mailing could not be started because the Smart Campaign must be in status \"Activated\". Please check the status of the campaign to which the mailing belongs."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/messages/{mailingId}/stop": {
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Stop a mailing",
                    "description": "Stop a mailing that is part of a Smart Campaign.",
                    "operationId": "stopCampaignMessage_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "path",
                            "description": "Campaign mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The mailing was stopped successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The mailing could not be stopped because the Smart Campaign must be in status \"Sending\" or \"Paused\". Please check the status of the campaign to which the mailing belongs."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/recipientLists": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about a \"Recipients\" node",
                    "description": "Get detailed information about a \"Recipients\" node, such as node ID, successor node ID or grid location.",
                    "operationId": "getRecipientListsNodeForSCMailing_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The \"Recipients\" node was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListsNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListsNode"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The \"Recipients\" node could not be found. Ensure that the required parameters such as \"campaignId\" or \"nodeId\" are correct and the \"Recipients\" node exists. "
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Create or update a \"Recipients\" node",
                    "description": "Create or update a \"Recipients\" node. The \"recipientListIds\" parameter is only required for updating.",
                    "operationId": "createOrUpdateRecipientListsNode_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipientListsRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The \"Recipient\" node was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListsNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListsNode"
                                    }
                                }
                            }
                        },
                        "201": {
                            "description": "The \"Recipient\" node was created successfully."
                        },
                        "404": {
                            "description": "The \"Recipient\" node could not be found. Ensure that the required parameters such as \"campaignId\" or \"recipientListIds\" are correct and the \"Recipients\" node exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/schedules": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about all \"Wait\" nodes of a Smart Campaign",
                    "description": "Get detailed information about all \"Wait\" nodes of a Smart Campaign, such as period (days, hours, minutes) or fallback.",
                    "operationId": "findWaitNodes",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The \"Wait\" nodes were retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestWaitNode"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestWaitNode"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Create a new \"Wait\" node in a Smart Campaign",
                    "description": "Create a new \"Wait\" node in a Smart Campaign and add information such as scheduled time or predecessor and successor node.",
                    "operationId": "createWaitNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/WaitRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The \"Wait\" node was created successfully (check \"Location\" header for exact URI).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWaitNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWaitNode"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/schedules/{waitNodeId}": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about a \"Wait\" node of a Smart Campaign",
                    "description": "Get detailed information about a \"Wait\" node of a Smart Campaign, such as period (days, hours, minutes) or fallback.",
                    "operationId": "getWaitNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "waitNodeId",
                            "in": "path",
                            "description": "\"Wait\" node ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The \"Wait\" node was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWaitNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWaitNode"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The \"Wait\" node could not be found. Ensure that the required parameters such as \"campaignId\" ore \"waitNodeId\" are correct and the \"Wait\" node exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Update a \"Wait\" node in a Smart Campaign",
                    "description": "Update information of a \"Wait\" node in a Smart Campaign, such as scheduled time, send time optimization or predecessor and successor node.",
                    "operationId": "updateWaitNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "waitNodeId",
                            "in": "path",
                            "description": "\"Wait\" node ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/WaitRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The \"Wait\" node was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWaitNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWaitNode"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The \"Wait\" node could not be found. Ensure that the required parameters such as \"campaignId\" or \"waitNodeId\" are correct and the \"Wait\" node exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Delete a \"Wait\" node in a Smart Campaign",
                    "operationId": "deleteWaitNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "waitNodeId",
                            "in": "path",
                            "description": "\"Wait\" node ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The \"Wait\" node was deleted successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/targetGroups": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about all \"Target groups\" nodes of a Smart Campaign",
                    "description": "Get detailed information about all \"Target groups\" nodes of a Smart Campaign, such as name of the target group, node ID or successor node ID.",
                    "operationId": "findTargetGroups",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The \"Target groups\" nodes were retrieved successfully (empty response if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestTargetGroupNode"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestTargetGroupNode"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Create or update a \"Target groups\" node of a Smart Campaign",
                    "description": "Create or update a \"Target groups\" node of a Smart Campaign, such as name of the target group or predecessor and successor node.",
                    "operationId": "createOrUpdateTargetGroupNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/TargetGroupRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The \"Target groups\" node was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTargetGroupNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTargetGroupNode"
                                    }
                                }
                            }
                        },
                        "201": {
                            "description": "The \"Target groups\" node was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTargetGroupNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTargetGroupNode"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Delete all \"Target groups\" nodes of a Smart Campaign",
                    "operationId": "deleteTargetGroupNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The \"Target groups\" nodes were deleted successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/targetGroups/{filterNodeId}": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about a \"Target groups\" node of a Smart Campaign",
                    "description": "Get detailed information about a \"Target groups\" node of a Smart Campaign, such as name of the target group, node ID or successor node ID.",
                    "operationId": "getTargetGroup",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "filterNodeId",
                            "in": "path",
                            "description": "\"Target groups\" node ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The \"Target groups\" node was retrieved successfully (empty response if no \"Target group\" node was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTargetGroupNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTargetGroupNode"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Delete a \"Target groups\" node of a Smart Campaign",
                    "operationId": "deleteTargetGroupNodeByNodeId",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "filterNodeId",
                            "in": "path",
                            "description": "ID of the \"Target group\" node which should be deleted",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The \"Target groups\" node was deleted successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/throttles": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about all \"Throttle\" nodes of a Smart Campaign",
                    "description": "Get detailed information about all \"Throttle\" nodes of a Smart Campaign, such messages per hour, node ID or successor node ID.",
                    "operationId": "findThrottleNodes",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The \"Throttle\" nodes were retrieved successfully (empty response if no \"Throttle\" node was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestThrottleNode"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestThrottleNode"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Create a new \"Throttle\" node in a Smart Campaign",
                    "description": "Create a new \"Throttle\" node in a Smart Campaign and add information such as maximum number of messages per hour or predecessor and successor node.",
                    "operationId": "createThrottleNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThrottleRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The \"Throttle\" node was created successfully (check \"Location\" header for exact URI).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestThrottleNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestThrottleNode"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/throttles/{throttleNodeId}": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get information about a \"Throttle\" node of a Smart Campaign",
                    "description": "Get detailed information about a \"Throttle\" node in a Smart Campaign, such as messages per hour, node ID or successor node ID.",
                    "operationId": "getThrottleNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "throttleNodeId",
                            "in": "path",
                            "description": "\"Throttle\" node ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The \"Throttle\" node was retrieved successfully (empty response if no \"Throttle\" node was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestThrottleNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestThrottleNode"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The \"Throttle\" node could not be found in the Smart Campaign. Ensure that the required parameters such as \"campaignId\" or \"throttleNodeId\" are correct and the \"Throttle\" node exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Update a \"Throttle\" node of a Smart Campaign",
                    "description": "Update a \"Throttle\" node of a Smart Campaign and specify information such as maximum number of messages per hour or predecessor and successor node.",
                    "operationId": "updateThrottleNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "throttleNodeId",
                            "in": "path",
                            "description": "\"Throttle\" node ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThrottleRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The \"Throttle\" node was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestThrottleNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestThrottleNode"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Delete a \"Throttle\" node in a Smart Campaign",
                    "operationId": "deleteThrottleNode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "throttleNodeId",
                            "in": "path",
                            "description": "\"Throttle\" node ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The \"Throttle\" node was deleted successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/pause": {
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Pause a Smart Campaign",
                    "description": "Pause a Smart Campaign. The Smart Campaign will change status to \"Paused\".",
                    "operationId": "pauseSmartCampaign",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The Smart Campaign was paused successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The Smart Campaign could not be paused. Ensure that the Smart Campaign has started and is in status \"Sending\"."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/report": {
                "get": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Get a campaign report",
                    "description": "Get a detailed campaign report containing information such as number of recipients, opens, clicks, bounces or unsubscribes.",
                    "operationId": "getReport_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The report was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/CampaignMailingRestReport"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/CampaignMailingRestReport"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/start": {
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Start a Smart Campaign",
                    "description": "Start a Smart Campaign. The Smart Campaign will change status to \"Sending\".",
                    "operationId": "startSmartCampaign",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The Smart Campaign was started successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The Smart Campaign could not be started because it must be in status \"Activation required\", \"New\" or \"Sending paused\"."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/smartcampaigns/{campaignId}/stop": {
                "post": {
                    "tags": [
                        "Smart Campaigns"
                    ],
                    "summary": "Cancel a Smart Campaign",
                    "operationId": "stopSmartCampaign",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "campaignId",
                            "in": "path",
                            "description": "Smart Campaign ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The Smart Campaign was cancelled successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The Smart Campaign could not be cancelled. Ensure that the Smart Campaign has started."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail": {
                "get": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Get information about all transactional mails",
                    "description": "Get detailed information about all transactional mails, such as status, type, starting date, successor node or grid location. You can filter for mailings assigned to a folder or limit the number of retrieved mailings.",
                    "operationId": "selectTransactionalCampaigns",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Mailings offset <p><i>Default value :</i> 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of transactional mails <p><i>Default value</i>: 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "mediaType",
                            "in": "query",
                            "description": "Filter mailings by media type<p><i>Available values</i> : email, sms, letter, push</p>",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "resultView",
                            "in": "query",
                            "description": "Choose whether to retrieve a DETAILED view including all nodes (messages, recipient lists, target groups) or a SUMMARY of metadata.<p><b>Note:</b> The more campaigns you have, the more time the detailed view takes to load.</p>",
                            "schema": {
                                "type": "string",
                                "default": "SUMMARY",
                                "enum": [
                                    "SUMMARY",
                                    "DETAILED"
                                ]
                            }
                        },
                        {
                            "name": "status",
                            "in": "query",
                            "description": "Filter mailings by status<p><i>Available values</i> : invalid, activationRequired, activated, canceled, paused, running, finished</p>",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "folderId",
                            "in": "query",
                            "description": "Filter mailings assigned to a folder",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "description": "Sort result by specific criteria",
                            "schema": {
                                "type": "string",
                                "default": "created",
                                "enum": [
                                    "id",
                                    "name",
                                    "description",
                                    "status",
                                    "created",
                                    "modified",
                                    "started",
                                    "finished"
                                ]
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "A list of transactional mails of a client was retrieved (empty if none exists).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaignStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaignStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Create a transactional mail",
                    "description": "Create a transactional mail and add information such as subjects for target groups, media code or successor and predecessor node.",
                    "operationId": "createTransactionalMailing",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventBasedMailingRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The transactional mail was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The transactional mail could not be created. Ensure that the required parameters such as \"recipientListIds\", \"mediaType\", \"subject\", \"senderAddress\" or \"content\" are correctly added to the request."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}": {
                "get": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Get information about a transactional mail",
                    "description": "Get detailed information about a transactional mail, such as status, type or date and time of creation.",
                    "operationId": "getTransactionalMailing",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The transactional mail was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Delete a transactional mail",
                    "operationId": "deleteTransactionalMailing",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The transactional mail was deleted successfully."
                        },
                        "409": {
                            "description": "The transactional mail could not be deleted because it contains started messages."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}/message": {
                "post": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Update a mailing",
                    "description": "Update information of a mailing, such as name, subject or content.",
                    "operationId": "updateCampaignMessage_3",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The mailing was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageNode"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}/message/content": {
                "get": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Get the content of a mailing (email)",
                    "description": "Get the content of a mailing (email) and define the content type to be delivered.",
                    "operationId": "getCampaignMessageContent_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "Accept",
                            "in": "header",
                            "description": "Controls which content type is used <p><i>Available values</i> : text/plain, text/html<p><i>Default value</i> : text/plain</p><p>Does not work with the \"Try it out\" feature.</p>",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The content of the mailing (in the indicated content type) was retrieved successfully."
                        },
                        "404": {
                            "description": "No content could be found for the indicated content type. Ensure that the \"Accept\" parameter has the correct content type and the content exists. "
                        },
                        "406": {
                            "description": "The content type is not supported. Ensure that the \"Accept\" parameter has the correct content type."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Update the content of a mailing",
                    "description": "Update the content of a mailing. You can transmit plain text, html, or multipart content that consists of HTML and plain text. See <a href=\"https://world.episerver.com/blogs/philipp-gaska/dates/2021/6/updating-mailing-content-via-rest-api\" target=\"_blank\">Updating mailing content via REST API</a> on Optimizely World. <b>Note</b>: You can only update the content of mailings created via REST API. This operation is also not suitable for confirmation mailings.",
                    "operationId": "storeCampaignMessageContent_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "multipart/form-data": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiRequest"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The mailing content was updated successfully."
                        },
                        "409": {
                            "description": "The mailing content could not be updated because of a general error."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}/message/test/{testMailingId}": {
                "get": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Get information about the sending status of all recipients of a test mailing",
                    "description": "Get detailed information about the sending status of all recipients of a test mailing, such as enqueued, sending, sent or failed.",
                    "operationId": "getTestMailingReport_3",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "testMailingId",
                            "in": "path",
                            "description": "Test mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The report was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingReport"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingReport"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}/message/tracking/links/{trackingLinkId}": {
                "get": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Get information about a tracking link of a mailing",
                    "description": "Get detailed information about a tracking link of a mailing, such as ID, URL or link occurrences in the text version.",
                    "operationId": "getTrackingLink_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "trackingLinkId",
                            "in": "path",
                            "description": "Tracking link ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The tracking link was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingLink"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingLink"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Update the tracking link configuration of a mailing",
                    "operationId": "updateLinkTracking_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "trackingLinkId",
                            "in": "path",
                            "description": "Tracking link ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackingLinkConfigurationRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The tracking link configuration was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingLink"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingLink"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}/message/tracking/links": {
                "get": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Get information about all tracking links of a mailing",
                    "description": "Get detailed information about all tracking links of a mailing, such as ID, URL or link occurrences in the text version.",
                    "operationId": "getTrackingLinks_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The tracking links were retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestTrackingLink"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestTrackingLink"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The number of tracking links exceeded the maximum of 3000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}/message/tracking": {
                "get": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Get information about the tracking configuration of a mailing",
                    "operationId": "getTrackingConfiguration_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The tracking configuration was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingConfiguration"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingConfiguration"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Update the tracking configuration of a mailing",
                    "operationId": "updateTrackingConfiguration_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackingConfigurationRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The tracking configuration was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingConfiguration"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestTrackingConfiguration"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}/recipientLists": {
                "get": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Get information about a \"Recipients\" node",
                    "description": "Get detailed information about a \"Recipients\" node, such as node ID, successor node ID or grid location.",
                    "operationId": "getRecipientListsNodeForSCMailing_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The \"Recipients\" node was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListsNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListsNode"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The \"Recipients\" node could not be found. Ensure that the required parameters such as \"campaignId\" or \"nodeId\" are correct and the \"Recipients\" node exists. "
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Create or update a \"Recipients\" node",
                    "description": "Create or update a \"Recipients\" node. The \"recipientListIds\" parameter is only required for updating.",
                    "operationId": "createOrUpdateRecipientListsNode_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipientListsRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The \"Recipient\" node was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListsNode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListsNode"
                                    }
                                }
                            }
                        },
                        "201": {
                            "description": "The \"Recipient\" node was created successfully."
                        },
                        "404": {
                            "description": "The \"Recipient\" node could not be found. Ensure that the required parameters such as \"campaignId\" or \"recipientListIds\" are correct and the \"Recipients\" node exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}/test/{testMailingId}": {
                "get": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Get information about the sending status of all recipients of a test mailing",
                    "description": "Get detailed information about the sending status of all recipients of a test mailing, such as enqueued, sending, sent or failed.",
                    "operationId": "getTestMailingReport_4",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "testMailingId",
                            "in": "path",
                            "description": "Test mailing ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The report was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingReport"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingReport"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}/test": {
                "post": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Send a test mailing",
                    "description": "Send a test mailing to check content, layout or target groups before sending the actual mailing.",
                    "operationId": "startTestMailing_4",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestMailingRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "202": {
                            "description": "The test message was sent successfully. The response contains a report on the recipients included in the test mailing (check \"validRecipientAddresses\" field).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingStartedReport"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/TestMailingStartedReport"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "At least one request parameter is not valid"
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}/send": {
                "post": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Send a transactional mail",
                    "description": "Send a transactional mail. You can specify attachment token or recipient data.",
                    "operationId": "sendTransactionalMailing",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendTransactionalMailingRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "202": {
                            "description": "The transactional mail was accepted and is sent asynchronously. To retrieve the sending status of the transactional mail, use the returned mailId and the GET status operation.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMailId"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMailId"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The required recipientId/recipientListId is not provided and the recipient list is not assigned to the mailing. Add the required parameters and try again."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}/report": {
                "get": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Get a campaign report",
                    "description": "Get a detailed campaign report containing information such as number of recipients, opens, clicks, bounces or unsubscribes.",
                    "operationId": "getReport_2",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The report was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/CampaignMailingRestReport"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/CampaignMailingRestReport"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}/start": {
                "post": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Start a transactional mail",
                    "operationId": "startTransactionalMailing",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The transactional mail was started successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The transactional mail could not be started because it must be in status \"Activated\". Please check the status of the mailing."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/{transactionalMailId}/stop": {
                "post": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Stop a transactional mail",
                    "operationId": "stopTransactionalMailing",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "transactionalMailId",
                            "in": "path",
                            "description": "Transactional mail ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The transactional mail was stopped successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSmartCampaign"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The transactional mail could not be stopped because it must be in status \"Started\". Please check the status of the mailing."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/transactionalmail/status": {
                "get": {
                    "tags": [
                        "Transactional mails"
                    ],
                    "summary": "Get the sending status of a sent transactional mail",
                    "operationId": "retrieveSendStatus",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "mailId",
                            "in": "query",
                            "description": "Corresponding MailID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Sending status. Possible values: enqueued, sending, sent, vetoed, wrong_mailing_status, syntax_error, blacklisted, filtered, too_many_bounces, unsubscribed, could_not_be_sent.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSendStatus"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestSendStatus"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/clickprofiles": {
                "get": {
                    "tags": [
                        "Click profiles"
                    ],
                    "summary": "Get information about all click profiles",
                    "description": "Get detailed information about all click profiles, such as name, description, rule or rule type. You can filter for profiles in a folder or limit the number of retrieved click profiles.",
                    "operationId": "selectClickProfiles",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved click profiles <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "clickProfileIds",
                            "in": "query",
                            "description": "Filter click profiles by IDs",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        },
                        {
                            "name": "linkIds",
                            "in": "query",
                            "description": "Filter click profiles assigned to the link IDs",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "folderId",
                            "in": "query",
                            "description": "Filter click profiles assigned to a folder",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "description": "Sort result by specific criteria",
                            "schema": {
                                "type": "string",
                                "default": "created",
                                "enum": [
                                    "created",
                                    "modified",
                                    "name",
                                    "description",
                                    "rulePattern",
                                    "ruleType"
                                ]
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The click profiles were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestClickProfileStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestClickProfileStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Click profiles"
                    ],
                    "summary": "Create a new click profile",
                    "description": "Create a new click profile. You can specify the name, the description, the rule pattern, the rule type of the new click profile.",
                    "operationId": "createClickProfile",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClickProfileRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The click profile was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestClickProfile"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestClickProfile"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The request parameters are invalid."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/clickprofiles/{clickProfileId}/assignedlinks": {
                "get": {
                    "tags": [
                        "Click profiles"
                    ],
                    "summary": "Get links a click profile is assigned to",
                    "description": "Get the links to which a specified click profile is assigned.",
                    "operationId": "getAssignedLinks",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved links <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "urlPattern",
                            "in": "query",
                            "description": "Filter links matching given pattern",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "searchColumn",
                            "in": "query",
                            "description": "Name of the column to be searched. It is used in conjunction with 'searchTerm'.",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "name",
                                    "type",
                                    "url",
                                    "created",
                                    "modified"
                                ]
                            }
                        },
                        {
                            "name": "types",
                            "in": "query",
                            "description": "Filter links by their types",
                            "explode": false,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "searchTerm",
                            "in": "query",
                            "description": "Value of the column to be searched. It is used in conjunction with 'searchColumn'.",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "urls",
                            "in": "query",
                            "description": "Filter links by their urls",
                            "explode": false,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "mailingIds",
                            "in": "query",
                            "description": "Filter links associated with given mailing IDs",
                            "explode": false,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "description": "Sort result by specific criteria",
                            "schema": {
                                "type": "string",
                                "default": "created",
                                "enum": [
                                    "id",
                                    "name",
                                    "type",
                                    "url",
                                    "created",
                                    "modified"
                                ]
                            }
                        },
                        {
                            "name": "name",
                            "in": "query",
                            "description": "Filter links by their name",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "clickProfileId",
                            "in": "path",
                            "description": "Click profile ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The assigned links were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestLinkStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestLinkStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Click profiles"
                    ],
                    "summary": "Assign links to a click profile",
                    "description": "Assign specific links to a click profile.",
                    "operationId": "assignLinksToClickProfile",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "clickProfileId",
                            "in": "path",
                            "description": "Click profile ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssignLinksToClickProfileRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The links were assigned successfully to a click profile.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestLink"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestLink"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Click profiles"
                    ],
                    "summary": "Unassign specific links from  a click profile",
                    "operationId": "unAssignLinksFromClickProfile",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "linkIds",
                            "in": "query",
                            "description": "Comma-separated list of link IDs",
                            "required": true,
                            "explode": false,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        },
                        {
                            "name": "clickProfileId",
                            "in": "path",
                            "description": "Click profile ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The links were unassigned from the click profile successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/clickprofiles/{clickProfileId}": {
                "get": {
                    "tags": [
                        "Click profiles"
                    ],
                    "summary": "Get information about a click profile",
                    "description": "Get detailed information about a click profile, such as name, description, rule pattern or rule type.",
                    "operationId": "getClickProfile",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "clickProfileId",
                            "in": "path",
                            "description": "Click profile ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The click profile was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestClickProfile"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestClickProfile"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The click profile could not be found. Ensure that the required parameters such as \"clickProfileId\" are correct and the click profile exists."
                        },
                        "409": {
                            "description": "The click profile is not assigned to the client. Ensure that the required parameters such as \"clientId\" and \"clickProfileId\" are correct and the folder exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Click profiles"
                    ],
                    "summary": "Update a click profile",
                    "description": "Update information of a click profile, such as name or description.",
                    "operationId": "updateClickProfile",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "clickProfileId",
                            "in": "path",
                            "description": "Click profile ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClickProfileRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The click profile was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestClickProfile"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestClickProfile"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The request parameters are invalid."
                        },
                        "404": {
                            "description": "The click profile could not be found. Ensure that the required parameters such as \"clickProfileId\" are correct and the click profile exists."
                        },
                        "409": {
                            "description": "The click profile is not assigned to the client. Ensure that the required parameters such as \"clientId\" and \"clickProfileId\" are correct and the folder exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/couponblocks": {
                "get": {
                    "tags": [
                        "Coupon blocks"
                    ],
                    "summary": "Get information about all coupon blocks",
                    "description": "Get detailed information about all coupon blocks, such as name, coupon source or if valid coupon codes are used for testing.",
                    "operationId": "selectCouponBlocks",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved coupon blocks <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "couponSource",
                            "in": "query",
                            "description": "Coupon source of the coupon block",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "static",
                                    "generated",
                                    "ean13barcode",
                                    "twooffivebarcode",
                                    "code128barcode",
                                    "code128abarcode",
                                    "code128bbarcode",
                                    "code128cbarcode"
                                ]
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The coupon blocks were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCouponBlockStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCouponBlockStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Coupon blocks"
                    ],
                    "summary": "Create a new coupon block",
                    "description": "Create a new coupon block and specify type, internal name and if it should use valid coupon codes.",
                    "operationId": "createCouponBlock",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponBlockRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The coupon block was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCouponBlock"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCouponBlock"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/couponblocks/{couponBlockId}": {
                "get": {
                    "tags": [
                        "Coupon blocks"
                    ],
                    "summary": "Get information about a coupon block",
                    "description": "Get detailed information about a coupon block, such as name, coupon source or if valid coupon codes are used for testing.",
                    "operationId": "getCouponBlock",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "couponBlockId",
                            "in": "path",
                            "description": "Coupon block ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The coupon block was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCouponBlock"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCouponBlock"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The coupon block could not be found. Ensure that the required parameters such as \"couponBlockId\" are correct and the coupon block exists."
                        },
                        "409": {
                            "description": "The coupon block is not assigned to the indicated client. Ensure that \"clientId\" and \"couponBlockId\" are correct and that the \"couponBlockId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Coupon blocks"
                    ],
                    "summary": "Delete a coupon block",
                    "operationId": "deleteCouponBlock",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "couponBlockId",
                            "in": "path",
                            "description": "Coupon block ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The coupon block was deleted successfully."
                        },
                        "404": {
                            "description": "The coupon block could not be found. Ensure that the required parameters such as \"couponBlockId\" are correct and the coupon block exists."
                        },
                        "409": {
                            "description": "The coupon block is not assigned to the indicated client. Ensure that \"clientId\" and \"couponBlockId\" are correct and that the \"couponBlockId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/couponblocks/{couponBlockId}/codes": {
                "get": {
                    "tags": [
                        "Coupon blocks"
                    ],
                    "summary": "Get information about coupon codes",
                    "description": "Get detailed information about all unassigned coupon codes. You can limit the maximum number of retrieved coupon codes and sort the result by specific criteria. To get information about all assigned and/or used coupon codes, filter by recipient ID or mailing ID.",
                    "operationId": "selectCouponCodes",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved coupon codes <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "codeAssignment",
                            "in": "query",
                            "description": "The status of the coupon codes to be filtered. Possible values are: assigned, unassigned, all",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "ONLY_ASSIGNED",
                                    "ONLY_UNASSIGNED",
                                    "ANY"
                                ]
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "query",
                            "description": "Mailing IDs to which the coupon codes are assigned",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "recipientId",
                            "in": "query",
                            "description": "Recipient IDs to which the coupon codes are assigned",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "description": "Sort result by specific criteria",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "CODE"
                                ]
                            }
                        },
                        {
                            "name": "couponBlockId",
                            "in": "path",
                            "description": "Coupon block ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The coupon codes were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCouponCodeStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCouponCodeStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The \"codeAssignment\" parameter is provided simultaneously with the \"mailingId\" or the \"recipientId\", or the limit parameter is invalid. Change the limit to less than 10000."
                        },
                        "404": {
                            "description": "The coupon block could not be found. Ensure that the required parameters such as \"couponBlockId\" are correct and the coupon block exists."
                        },
                        "409": {
                            "description": "The coupon block is not assigned to the indicated client. Ensure that \"clientId\" and \"couponBlockId\" are correct and that the \"couponBlockId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Coupon blocks"
                    ],
                    "summary": "Create a list of coupon codes",
                    "operationId": "createCouponCodes",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "couponBlockId",
                            "in": "path",
                            "description": "Coupon block ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponCodeRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The coupon codes were created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestCouponCode"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestCouponCode"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The request parameters are invalid."
                        },
                        "404": {
                            "description": "The coupon block could not be found. Ensure that the required parameters such as \"couponBlockId\" are correct and the coupon block exists."
                        },
                        "409": {
                            "description": "The coupon block is not assigned to the indicated client. Ensure that \"clientId\" and \"couponBlockId\" are correct and that the \"couponBlockId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Coupon blocks"
                    ],
                    "summary": "Delete coupon codes",
                    "operationId": "deleteAllCouponCodes",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "codes",
                            "in": "query",
                            "description": "Coupon codes to be deleted",
                            "required": true,
                            "explode": false,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "couponBlockId",
                            "in": "path",
                            "description": "Coupon block ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The coupon codes were deleted successfully."
                        },
                        "404": {
                            "description": "The coupon block could not be found. Ensure that the required parameters such as \"couponBlockId\" are correct and the coupon block exists."
                        },
                        "409": {
                            "description": "The coupon block is not assigned to the indicated client. Ensure that \"clientId\" and \"couponBlockId\" are correct and that the \"couponBlockId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/couponblocks/{couponBlockId}/codes/{code}": {
                "get": {
                    "tags": [
                        "Coupon blocks"
                    ],
                    "summary": "Get information about a coupon code",
                    "description": "Get detailed information about a coupon code, such as code, mailing assignment or recipient assignment.",
                    "operationId": "getCouponCode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "code",
                            "in": "path",
                            "description": "Coupon code",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "couponBlockId",
                            "in": "path",
                            "description": "Coupon block ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The coupon code was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCouponCode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCouponCode"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The coupon code could not be found. Ensure that the required parameters such as \"couponBlockId\" are correct and the coupon code exists."
                        },
                        "409": {
                            "description": "The coupon code is not assigned to the indicated client. Ensure that \"clientId\" and the coupon code are correct and that the \"couponBlockId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Coupon blocks"
                    ],
                    "summary": "Invalidate a coupon code",
                    "description": "Mark a coupon code as used.",
                    "operationId": "markAsUsed",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "code",
                            "in": "path",
                            "description": "Coupon code",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "couponBlockId",
                            "in": "path",
                            "description": "Coupon block ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The coupon code was invalidated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCouponCode"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCouponCode"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The coupon code could not be found. Ensure that the required parameters such as \"couponBlockId\" are correct and the coupon code exists."
                        },
                        "409": {
                            "description": "The coupon code is not assigned to the indicated client. Ensure that \"clientId\" and the coupon code are correct and that the \"couponBlockId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Coupon blocks"
                    ],
                    "summary": "Delete a coupon code",
                    "operationId": "deleteCouponCode",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "code",
                            "in": "path",
                            "description": "Coupon code",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "couponBlockId",
                            "in": "path",
                            "description": "Coupon block ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The coupon code was deleted successfully."
                        },
                        "404": {
                            "description": "The coupon code could not be found. Ensure that the required parameters such as \"couponBlockId\" are correct and the coupon code exists."
                        },
                        "409": {
                            "description": "The coupon code is not assigned to the indicated client. Ensure that \"clientId\" and the coupon code are correct and that the \"couponBlockId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/couponblocks/{couponBlockId}/assignedmailings": {
                "get": {
                    "tags": [
                        "Coupon blocks"
                    ],
                    "summary": "Get all mailing IDs a coupon block is assigned to",
                    "description": "Get all mailing IDs to which a specified coupon block is assigned.",
                    "operationId": "getAllAssignedMailings",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "couponBlockId",
                            "in": "path",
                            "description": "Coupon block ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The mailing IDs were retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAssignedMailings"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAssignedMailings"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The coupon block could not be found. Ensure that the required parameters such as \"couponBlockId\" are correct and the coupon block exists."
                        },
                        "409": {
                            "description": "The coupon block is not assigned to the indicated client. Ensure that \"clientId\" and \"couponBlockId\" are correct and that the \"couponBlockId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/customblacklists": {
                "get": {
                    "tags": [
                        "Custom blocklists"
                    ],
                    "summary": "Get information about all custom blocklists",
                    "description": "Get detailed information about all custom blocklists, such as name or hash algorithm. You can limit the number of retrieved custom blocklists and set the starting point of the result list.",
                    "operationId": "selectCustomBlacklists",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved custom blocklists <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "folderId",
                            "in": "query",
                            "description": "Filter custom blocklists assigned to a folder",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The custom blocklists were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklistStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklistStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Custom blocklists"
                    ],
                    "summary": "Create a custom blocklist",
                    "operationId": "createCustomBlacklist",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomBlacklistRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The custom blocklist was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklist"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklist"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/customblacklists/{customBlacklistId}/entries": {
                "get": {
                    "tags": [
                        "Custom blocklists"
                    ],
                    "summary": "Get information about all entries of a custom blocklist",
                    "description": "Get detailed information about all entries of a custom blocklist, such as pattern, reason for blocklisting or creation date.",
                    "operationId": "selectCustomBlacklistEntries",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Custom blocklist entries offset <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved custom blocklist entries <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "exactPattern",
                            "in": "query",
                            "description": "Exact pattern",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "matchingPattern",
                            "in": "query",
                            "description": "Matching pattern",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "description": "Sort result by specific criteria",
                            "schema": {
                                "type": "string",
                                "default": "created",
                                "enum": [
                                    "pattern",
                                    "reason",
                                    "created"
                                ]
                            }
                        },
                        {
                            "name": "customBlacklistId",
                            "in": "path",
                            "description": "Custom blocklist ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The custom blocklist entries were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklistEntryStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklistEntryStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Custom blocklists"
                    ],
                    "summary": "Create custom blocklist entries",
                    "operationId": "createBlacklistEntries",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "customBlacklistId",
                            "in": "path",
                            "description": "Custom blocklist ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateCustomBlacklistEntriesRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The custom blocklist entries were created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestCustomBlacklistEntry"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestCustomBlacklistEntry"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Custom blocklists"
                    ],
                    "summary": "Delete all entries from a custom blocklist",
                    "operationId": "wipeCustomBlacklistEntries",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "customBlacklistId",
                            "in": "path",
                            "description": "Custom blocklist ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The custom blocklist was cleared successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/customblacklists/{customBlacklistId}/entries/{customBlacklistEntryId}": {
                "get": {
                    "tags": [
                        "Custom blocklists"
                    ],
                    "summary": "Get information about a custom blocklist entry",
                    "description": "Get detailed information about a custom blocklist entry, such as pattern, reason for blocklisting or creation date.",
                    "operationId": "getCustomBlacklistEntry",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "customBlacklistEntryId",
                            "in": "path",
                            "description": "Custom blocklist entry ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "customBlacklistId",
                            "in": "path",
                            "description": "Custom blocklist ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The custom blocklist entry was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklistEntry"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklistEntry"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The custom blocklist entry could not be found. Ensure that the required parameters such as \"customBlacklistId\" are correct and the custom blocklist entry exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Custom blocklists"
                    ],
                    "summary": "Update a custom blocklist entry",
                    "description": "Update information of a custom blocklist entry, such as pattern or reason for blocklisting.",
                    "operationId": "updateCustomBlacklistEntry",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "customBlacklistEntryId",
                            "in": "path",
                            "description": "Custom blocklist entry ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "customBlacklistId",
                            "in": "path",
                            "description": "Custom blocklist ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomBlacklistEntryRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The custom blocklist entry was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklistEntry"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklistEntry"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The custom blocklist entry could not be found. Ensure that the required parameters such as \"customBlacklistId\" are correct and the custom blocklist entry exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Custom blocklists"
                    ],
                    "summary": "Delete a custom blocklist entry",
                    "operationId": "deleteCustomBlacklistEntry",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "customBlacklistEntryId",
                            "in": "path",
                            "description": "Custom blocklist entry ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "customBlacklistId",
                            "in": "path",
                            "description": "Custom blocklist ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The custom blocklist entry was deleted successfully."
                        },
                        "404": {
                            "description": "The custom blocklist entry could not be found. Ensure that the required parameters such as \"customBlacklistId\" are correct and the custom blocklist entry exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/customblacklists/{customBlacklistId}": {
                "get": {
                    "tags": [
                        "Custom blocklists"
                    ],
                    "summary": "Get information about a custom blocklist",
                    "description": "Get detailed information about a custom blocklist, such as name or hash algorithm.",
                    "operationId": "getCustomBlacklist",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "customBlacklistId",
                            "in": "path",
                            "description": "Custom blocklist ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The custom blocklist was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklist"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklist"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The custom blocklist could not be found. Ensure that the required parameters such as \"customBlacklistId\" are correct and the custom blocklist exists."
                        },
                        "409": {
                            "description": "The custom blocklist could not be transmitted. Ensure that the required parameters such as \"customBlacklistId\" are correct and the custom blocklist exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Custom blocklists"
                    ],
                    "summary": "Update a custom blocklist",
                    "description": "Update information of a custom blocklist, such as name or hash algorithm.",
                    "operationId": "updateCustomBlacklist",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "customBlacklistId",
                            "in": "path",
                            "description": "Custom blocklist ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomBlacklistRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The custom blocklist was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklist"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCustomBlacklist"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/customerjobs/configured": {
                "get": {
                    "tags": [
                        "Scheduled jobs"
                    ],
                    "summary": "Get information about all configured scheduled jobs",
                    "description": "Get detailed information about all configured scheduled jobs, such as name, description, triggers.",
                    "operationId": "selectAllConfiguredJobs",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved configured scheduled jobs <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "All configured scheduled jobs were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestConfiguredJobStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestConfiguredJobStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        },
                        "403": {
                            "description": "IP address was not allowed to access jobs rest api server."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/customerjobs/running": {
                "get": {
                    "tags": [
                        "Scheduled jobs"
                    ],
                    "summary": "Get information about all running scheduled jobs",
                    "description": "Get detailed information about all running scheduled jobs, such as name, start time, elapsed running time.",
                    "operationId": "selectAllRunningJobs",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "All running scheduled jobs were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRunningJobStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRunningJobStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        },
                        "403": {
                            "description": "IP address was not allowed to access jobs rest api server."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/folders": {
                "get": {
                    "tags": [
                        "Folders"
                    ],
                    "summary": "Get information about all folders",
                    "description": "Get detailed information about all folders, such as parent ID, children ID or creation date. You can limit the result to root folders or filter for a specific type.",
                    "operationId": "selectFolders",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved folders <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "type",
                            "in": "query",
                            "description": "Filter folders by type (required if \"entityId\" is not provided)",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "mailing",
                                    "messageTemplate",
                                    "customBlacklist",
                                    "image"
                                ]
                            }
                        },
                        {
                            "name": "onlyRoot",
                            "in": "query",
                            "description": "If true, only root folders are included in the results",
                            "schema": {
                                "type": "boolean",
                                "default": false
                            }
                        },
                        {
                            "name": "entityId",
                            "in": "query",
                            "description": "ID of a folder to which a mailing, message template, or custom blacklist has been assigned (required if type is not provided)",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The folders were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestFolderStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestFolderStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Folders"
                    ],
                    "summary": "Create a folder",
                    "operationId": "createFolder",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The folder was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestFolder"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestFolder"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Either [\"name\" or \"folderType\"] is not provided or \"folderType\" is not in {mailing, messageTemplate, customBlacklist, image}. Ensure that the required parameters are added and \"folderType\" is correct."
                        },
                        "404": {
                            "description": "The parent folder could not be found. Ensure that \"parentId\" is correct and the parent folder exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/folders/{folderId}/assign": {
                "post": {
                    "tags": [
                        "Folders"
                    ],
                    "summary": "Assign to an entity",
                    "description": "Assign a folder to an entity, such as mailing, message template, custom blacklist, or image.",
                    "operationId": "assign",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "folderId",
                            "in": "path",
                            "description": "Folder ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnAssignEntityToFolderRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The entity was assigned successfully."
                        },
                        "400": {
                            "description": "The entity ID is required. Check for the ID of the entity and add it to the request."
                        },
                        "404": {
                            "description": "The folder or entity object could not be found. Ensure that the required parameters such as \"folderId\" or \"entityID\" are correct and the folder exists."
                        },
                        "409": {
                            "description": "The folder could not be assigned to the mailing entity because the entity is a campaign child. Ensure that the requested entity is not a child of a campaign."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/folders/{folderId}": {
                "get": {
                    "tags": [
                        "Folders"
                    ],
                    "summary": "Get information about a folder",
                    "description": "Get detailed information about a folder, such as ID, name or date and time of creation.",
                    "operationId": "getFolder",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "folderId",
                            "in": "path",
                            "description": "Folder ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The folder was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestFolder"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestFolder"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The folder could not be found. Ensure that the required parameters such as \"folderId\" are correct and the folder exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Folders"
                    ],
                    "summary": "Update a folder",
                    "description": "Update information of a folder, such as name, type or parent folder.",
                    "operationId": "updateFolder",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "folderId",
                            "in": "path",
                            "description": "Folder ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The folder was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestFolder"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestFolder"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The folder does not exist or the new updated parent folder could not be found. Ensure that the required parameters such as \"folderId\" or \"parentId\" are correct and the folder exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Folders"
                    ],
                    "summary": "Delete a folder",
                    "description": "The folder to be deleted must be empty.",
                    "operationId": "deleteFolder",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "folderId",
                            "in": "path",
                            "description": "Folder ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The folder was deleted successfully."
                        },
                        "404": {
                            "description": "The folder could not be found. Ensure that the required parameters such as \"folderId\" are correct and the folder exists."
                        },
                        "409": {
                            "description": "The folder could not be deleted because it is either not empty or being referenced in a filter."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/folders/{folderId}/unassign": {
                "post": {
                    "tags": [
                        "Folders"
                    ],
                    "summary": "Unassign from an entity",
                    "description": "Unassign a folder from an entity, such as mailing, message template, custom blacklist, or image.",
                    "operationId": "unassign",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "folderId",
                            "in": "path",
                            "description": "Folder ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnAssignEntityToFolderRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The entity was unassigned successfully."
                        },
                        "400": {
                            "description": "The entity ID is required. Check for the ID of the entity and add it to the request."
                        },
                        "404": {
                            "description": "The folder could not be found. Ensure that the required parameters such as \"folderId\" or \"entitiyId\" are correct and the folder exists. "
                        },
                        "409": {
                            "description": "The folder could not be unassigned from the mailing entity because the entity is a campaign child. Ensure that the entity is not a child of a campaign."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/mailarchive/{bmMailId}": {
                "get": {
                    "tags": [
                        "Mail archive"
                    ],
                    "summary": "Get information about an archived mailing",
                    "description": "Get detailed information about an archived mailing, such as mailing type, mailingToUser ID and the date and time of creation.",
                    "operationId": "getArchivedMailMetaData",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "bmMailId",
                            "in": "path",
                            "description": "Encoded mail ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The information about the archived mailing was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestArchiveMail"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestArchiveMail"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The bmMailId is invalidly encoded."
                        },
                        "404": {
                            "description": "The bmMailId could not be found in the mail archive."
                        },
                        "409": {
                            "description": "The indicated bmMailId is not assigned to the indicated client. Ensure that \"clientId\" and \"bmMailId\" are correct and that \"bmMailId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/mailarchive": {
                "get": {
                    "tags": [
                        "Mail archive"
                    ],
                    "summary": "Get information about all archived mailings",
                    "description": "Get detailed information about all archived mailings, such as mailing type, mailingToUser ID and the date and time of creation.",
                    "operationId": "selectArchiveMails",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientAddress",
                            "in": "query",
                            "description": "Recipient address (usually the email address)",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "next-cursor",
                            "in": "header",
                            "description": "Cursor to retrieve next batch. Cursor is going to expire after 10 minutes.",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "query",
                            "description": "Mailing ID of archived mail",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "from",
                            "in": "query",
                            "description": "Time filter to select archived mails created from date. DateTimeFormat 2021-11-07 17:43:01. UTC Timezone will be used to parse the parameter",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientId",
                            "in": "query",
                            "description": "Recipient ID (usually the email address)",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "optinStatus",
                            "in": "query",
                            "description": "Double Opt-in status (Only for confirmation archived mails)",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "non_confirmed",
                                    "confirmed"
                                ]
                            }
                        },
                        {
                            "name": "mailingTypes",
                            "in": "query",
                            "description": "Collection of mailingTypes. Supported mailingTypes [event, transaction, confirmation]",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "bmMailIds",
                            "in": "query",
                            "description": "Collection of encoded mail IDs",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "until",
                            "in": "query",
                            "description": "Time filter to select archived mails created until date. DateTimeFormat 2021-11-07 17:43:01. UTC Timezone will be used to parse the parameter",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The information about the archived mailing was retrieved successfully.",
                            "headers": {
                                "next-cursor": {
                                    "description": "Cursor to retrieve next batch. Cursor is going to be expired after 10 minutes.",
                                    "style": "simple",
                                    "schema": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestArchiveMail"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestArchiveMail"
                                    }
                                }
                            }
                        },
                        "204": {
                            "description": "Archived mailings could not be found."
                        },
                        "400": {
                            "description": "Invalid request or 'next-cursor' is expired. Make sure you requested no more than 10000 results."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/mailarchive/{bmMailId}/content": {
                "get": {
                    "tags": [
                        "Mail archive"
                    ],
                    "summary": "Get the content of an archived mailing",
                    "description": "Get the content of an archived mailing. You can retrieve the content as EML or HTML file, and optionally compress the mailing to save space.",
                    "operationId": "getArchivedMailContent",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "mailFormat",
                            "in": "query",
                            "description": "File type of the retrieved mailing<p><i>Default value</i> : EML</p>",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "EML",
                                    "HTML"
                                ]
                            }
                        },
                        {
                            "name": "compressed",
                            "in": "query",
                            "description": "Compress the mailing to save space<p><i>Default value</i> : false</p>",
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "name": "bmMailId",
                            "in": "path",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The archived mailing was retrieved successfully.",
                            "content": {
                                "application/octet-stream": {
                                    "schema": {
                                        "type": "object"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The bmMailId is invalidly encoded."
                        },
                        "404": {
                            "description": "The bmMailId could not be found in the mail archive."
                        },
                        "409": {
                            "description": "The indicated bmMailId is not assigned to the indicated client. Ensure that \"clientId\" and \"bmMailId\" are correct and that \"bmMailId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/mailarchive/content": {
                "get": {
                    "tags": [
                        "Mail archive"
                    ],
                    "summary": "Get compressed file with archived mailing contents",
                    "description": "Get compressed file with archived mailing contents.",
                    "operationId": "selectArchivedMailContents",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientAddress",
                            "in": "query",
                            "description": "Recipient address (usually the email address)",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "next-cursor",
                            "in": "header",
                            "description": "Cursor to retrieve next batch. Cursor is going to expire after 10 minutes.",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "query",
                            "description": "Mailing ID of archived mail",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "from",
                            "in": "query",
                            "description": "Time filter to select archived mails created from date. DateTimeFormat 2021-11-07 17:43:01. UTC Timezone will be used to parse the parameter",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientId",
                            "in": "query",
                            "description": "Recipient ID (usually the email address)",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "optinStatus",
                            "in": "query",
                            "description": "Double Opt-in status (Only for confirmation archived mails)",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "non_confirmed",
                                    "confirmed"
                                ]
                            }
                        },
                        {
                            "name": "mailingTypes",
                            "in": "query",
                            "description": "Collection of mailingTypes. Supported mailingTypes [event, transaction, confirmation]",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "bmMailIds",
                            "in": "query",
                            "description": "Collection of encoded mail IDs",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "until",
                            "in": "query",
                            "description": "Time filter to select archived mails created until date. DateTimeFormat 2021-11-07 17:43:01. UTC Timezone will be used to parse the parameter",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The compressed file with archived mailing contents was retrieved successfully.",
                            "headers": {
                                "next-cursor": {
                                    "description": "Cursor to retrieve next batch. Cursor is going to be expired after 10 minutes.",
                                    "style": "simple",
                                    "schema": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "content": {
                                "application/octet-stream": {
                                    "schema": {
                                        "type": "object"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "204": {
                            "description": "Archived mailings could not be found."
                        },
                        "400": {
                            "description": "Invalid request or 'next-cursor' is expired."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/mailid/{mailId}": {
                "get": {
                    "tags": [
                        "Mail ID"
                    ],
                    "summary": "Get information about a mail ID",
                    "description": "Get detailed information about a mail ID. A mail ID is the aggregation of the mailing ID, recipient list ID and recipient ID.",
                    "operationId": "getDetailedMailIdInformationByEncodedId",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "mailId",
                            "in": "path",
                            "description": "Mail ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The mail ID information was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMailIdInfo"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMailIdInfo"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The mail ID is invalidly encoded."
                        },
                        "409": {
                            "description": "The indicated mail ID is not assigned to the indicated client. Ensure that \"clientId\" and \"mailId\" are correct and that \"mailId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/messagetemplates": {
                "get": {
                    "tags": [
                        "Message templates"
                    ],
                    "summary": "Get information about all message templates",
                    "description": "Get detailed information about all message templates, such as format, subject, reply-to address or creation date. You can filter for messages in a folder or limit the number of retrieved message templates.",
                    "operationId": "selectMessageTemplates",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved message templates <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "folderId",
                            "in": "query",
                            "description": "Filter message templates assigned to a folder",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "description": "Sort result by specific criteria",
                            "schema": {
                                "type": "string",
                                "default": "created",
                                "enum": [
                                    "id",
                                    "name",
                                    "contentId",
                                    "contentTemplate",
                                    "mediaType",
                                    "created",
                                    "createdBy",
                                    "modified",
                                    "modifiedBy"
                                ]
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The message templates were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageTemplateStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageTemplateStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Message templates"
                    ],
                    "summary": "Create or copy a message template",
                    "description": "Create or copy a message template. You can specify the sender address, the subject for target groups or reset the reply-to address. <b>Note</b>: One of the following request parameters is required: cmsContentTemplateId, mailingId, messageTemplateIdForCreate, messageTemplateIdForCopy.",
                    "operationId": "createOrCopyMessageTemplate",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageTemplateRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The message template was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageTemplate"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageTemplate"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/messagetemplates/{messageTemplateId}": {
                "get": {
                    "tags": [
                        "Message templates"
                    ],
                    "summary": "Get information about a message template",
                    "description": "Get detailed information about a message template, such as reply-to address, subject, format or creation date.",
                    "operationId": "getMessageTemplate",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "messageTemplateId",
                            "in": "path",
                            "description": "Message template ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The message template was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageTemplate"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageTemplate"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The indicated message template is not assigned to the indicated client. Ensure that \"clientId\" and \"messageTemplateId\" are correct and that the \"messageTemplateId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Message templates"
                    ],
                    "summary": "Update a message template",
                    "description": "Update information of a message template, such as name or subject.",
                    "operationId": "updateMessageTemplate",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "messageTemplateId",
                            "in": "path",
                            "description": "Message template ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageTemplateRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The message template was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageTemplate"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestMessageTemplate"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Message templates"
                    ],
                    "summary": "Delete a message template",
                    "operationId": "deleteMessageTemplate",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "messageTemplateId",
                            "in": "path",
                            "description": "Message template ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The message template was deleted successfully."
                        },
                        "409": {
                            "description": "The indicated message template is not assigned to the indicated client. Ensure that \"clientId\" and \"messageTemplateId\" are correct and that the \"messageTemplateId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/messagetemplates/{messageTemplateId}/test": {
                "post": {
                    "tags": [
                        "Message templates"
                    ],
                    "summary": "Test a message template",
                    "description": "Send a test mailing to check content and layout of a message template before sending the actual mailing.",
                    "operationId": "testMessageTemplate",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "messageTemplateId",
                            "in": "path",
                            "description": "Message template ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageTemplateTestMailingRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "202": {
                            "description": "The message template was sent successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/MessageTemplateTestResponse"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/MessageTemplateTestResponse"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/optinprocesses": {
                "get": {
                    "tags": [
                        "Opt-in processes"
                    ],
                    "summary": "Get information about all opt-in processes",
                    "description": "Get detailed information about all opt-in processes, such as type, title or creation date.",
                    "operationId": "selectOptinProcesses",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved opt-in processes <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "hasMailing",
                            "in": "query",
                            "description": "Get all opt-in processes associated with a mailing",
                            "schema": {
                                "type": "boolean"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The opt-in processes were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestOptinProcessStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestOptinProcessStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Opt-in processes"
                    ],
                    "summary": "Create an opt-in process",
                    "description": "Create an opt-in process. You can specify name, type or registration page.",
                    "operationId": "createOptinProcess",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/OptinProcessRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The opt-in process was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestOptinProcess"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestOptinProcess"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The confirmation mailing could not be found. Ensure that the required parameters such as \"confirmationMailingId\" are correct and the confirmation mailing exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/optinprocesses/{optinProcessId}": {
                "get": {
                    "tags": [
                        "Opt-in processes"
                    ],
                    "summary": "Get information about an opt-in process",
                    "description": "Get detailed information about an opt-in process, such as type, title or creation date.",
                    "operationId": "getOptinProcess",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "optinProcessId",
                            "in": "path",
                            "description": "Opt-in process ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The opt-in process was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestOptinProcess"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestOptinProcess"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The indicated opt-in process is not assigned to the indicated client. Ensure that \"clientId\" and \"optinProcessId\" are correct and that the \"optinProcessId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Opt-in processes"
                    ],
                    "summary": "Update an opt-in process",
                    "description": "Update information of an opt-in process, such as name, description or type.",
                    "operationId": "updateOptinProcess",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "optinProcessId",
                            "in": "path",
                            "description": "Opt-in process ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/OptinProcessRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The opt-in process was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestOptinProcess"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestOptinProcess"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipientlists": {
                "get": {
                    "tags": [
                        "Recipient lists"
                    ],
                    "summary": "Get information about all recipient lists",
                    "description": "Get detailed information about all recipient lists, such as number of recipients, list description or suitability for transactional mails. You can limit the number of retrieved lists and include test lists.",
                    "operationId": "selectRecipientLists",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved recipient lists <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "includeTestLists",
                            "in": "query",
                            "description": "Include test lists in the result set",
                            "schema": {
                                "type": "boolean",
                                "default": true
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "description": "Sort result by specific criteria",
                            "schema": {
                                "type": "string",
                                "default": "created",
                                "enum": [
                                    "name",
                                    "created",
                                    "modified"
                                ]
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The recipient lists were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Recipient lists"
                    ],
                    "summary": "Copy a recipient list",
                    "operationId": "copyRecipientList",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/CopyRecipientListRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The recipient list was copied successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientList"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientList"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "sourceRecipientListId is not provided. Ensure that the required parameter is added."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipientlists/{recipientListId}": {
                "get": {
                    "tags": [
                        "Recipient lists"
                    ],
                    "summary": "Get information about a recipient list",
                    "description": "Get detailed information about a recipient list, such as number of recipients, list description or suitability for transactional mails.",
                    "operationId": "getRecipientList",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The recipient list was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientList"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientList"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The indicated recipient list is not assigned to the indicated client. Ensure that \"clientId\" and \"recipientListId\" are correct and that the \"recipientListId\" is assigned to the indicated client. "
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Recipient lists"
                    ],
                    "summary": "Update a recipient list",
                    "description": "Update information of a recipient list such as name or description and check if the list is a test list.",
                    "operationId": "updateRecipientList",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipientListRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The recipient list was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientList"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientList"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipientlists/{recipientListId}/attributeNames": {
                "get": {
                    "tags": [
                        "Recipient lists"
                    ],
                    "summary": "Get the attribute names of a recipient list",
                    "operationId": "getRecipientListAttributeNames",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The recipient list's attribute names were retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListAttributeNames"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientListAttributeNames"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The recipient list's attribute names could not be retrieved. Ensure that the required parameters such as \"recipientListId\" are correct and the recipient list exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipients/{recipientListId}": {
                "get": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Get information about all recipients in a recipient list",
                    "description": "Get detailed information about all recipients in a recipient list, such as recipient ID, creation date and modification date.<p><b>Request limit:</b> In total, a maximum of 10 simultaneous requests for the following operations are permitted per client: REST API selectRecipients, <a href=\"https://api.campaign.episerver.net/apidoc/index.html#/Recipients/countRecipients\" target=\"_blank\">REST API countRecipients</a> and <a href=\"https://world.episerver.com/documentation/developer-guides/campaign/SOAP-API/recipientwebservice/getcount/\" target=\"_blank\">SOAP API getCount (RecipientWebservice)</a>.</p>",
                    "operationId": "selectRecipients",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of recipients <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "targetGroup",
                            "in": "query",
                            "description": "ID of the matching target group",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "includeOptinData",
                            "in": "query",
                            "description": "Specify whether the opt-in data fields should be returned. Only applicable for opt-in list",
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "name": "attributeNames",
                            "in": "query",
                            "description": "Comma-separated names of the fields whose recipient data is to be retrieved. Example: \"firstname,lastname\". <p><b>Note:</b> You must use the internal names of the recipient list fields. <br>To retrieve the attribute names of a recipient list, use the <b>Recipient lists</b> operation <b>GET /{clientId}/recipientlists/{recipientListId}/attributeNames</b>.</br></p>",
                            "explode": false,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "default": "ASC",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "description": "Sort result by specific criteria",
                            "schema": {
                                "type": "string",
                                "default": "id"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "All relevant recipients were retrieved successfully (maximum 10000 recipients can be fetched at once).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        },
                        "429": {
                            "description": "Too many requests are used at the same time to retrieve recipients."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "put": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Add multiple recipients to a recipient list",
                    "operationId": "addRecipients",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateRecipientsRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Adding recipients was initiated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientsCreationModify"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientsCreationModify"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The indicated opt-in process is not suitable for adding recipients."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Add a recipient to a recipient list",
                    "operationId": "addRecipient",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateRecipientRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The recipient was added successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipient"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipient"
                                    }
                                }
                            }
                        },
                        "202": {
                            "description": "The recipient was added successfully, but is not immediately accessible (in case of a double opt-in).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipient"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipient"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The required parameters for the recipient's creation are not provided. Ensure that \"clientId\", \"recipientListId\" and \"recipientId\" are added to the request."
                        },
                        "409": {
                            "description": "The recipient has either been blacklisted, has exceeded the bounce limit, has unsubscribed, or exists already. Ensure that \"recipientId\" is correct and that the recipient does not meet any of the other criteria."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Delete recipients from a recipient list",
                    "description": "Delete multiple recipients from a recipient list. <b>Note</b>: All recipients are deleted if neither \"recipientIds\" nor \"removalType\" is specified.",
                    "operationId": "deleteRecipients",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "removalType",
                            "in": "query",
                            "description": "Specifies the recipients to be removed. Cannot be combined with 'recipientIds' parameter.",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "blacklisted",
                                    "bounced",
                                    "unsubscribed"
                                ]
                            }
                        },
                        {
                            "name": "mediaType",
                            "in": "query",
                            "description": "Filter recipients for a given type (can only be used with 'removalType' parameter)",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "EMAIL",
                                    "FAX",
                                    "SMS",
                                    "LETTER",
                                    "PUSH",
                                    "PRINT"
                                ]
                            }
                        },
                        {
                            "name": "recipientIds",
                            "in": "query",
                            "description": "Comma-separated list of recipient IDs. Cannot be combined with 'removalType' parameter.",
                            "explode": false,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The deletion was initiated successfully."
                        },
                        "400": {
                            "description": "The parameters \"recipientIds\" and \"removalType\" were added simultaneously. Provide either \"recipientIds\" or \"removalType\" parameter."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipients/{recipientListId}/count": {
                "get": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Get the total number of recipients in a recipient list",
                    "description": "<b>Request limit:</b> In total, a maximum of 10 simultaneous requests for the following operations are permitted per client: REST API countRecipients, <a href=\"https://api.campaign.episerver.net/apidoc/index.html#/Recipients/selectRecipients\" target=\"_blank\">REST API selectRecipients</a> and <a href=\"https://world.episerver.com/documentation/developer-guides/campaign/SOAP-API/recipientwebservice/getcount/\" target=\"_blank\">SOAP API getCount (RecipientWebservice)</a>.",
                    "operationId": "countRecipients",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "targetGroup",
                            "in": "query",
                            "description": "Target group ID",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The number of recipients was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                }
                            }
                        },
                        "429": {
                            "description": "Too many requests are used at the same time to retrieve recipients."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipients/{recipientListId}/distinctvalues/count": {
                "get": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Get the total number of recipients for distinct attribute values",
                    "description": "Get all distinct attribute values and count the recipients for each value.",
                    "operationId": "countDistinctValues",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "targetGroup",
                            "in": "query",
                            "description": "Target group ID",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "attributeName",
                            "in": "query",
                            "description": "Field name (e.g. firstname, lastname etc.) to be retrieved for distinct values",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "threshold",
                            "in": "query",
                            "description": "Number of characters that are examined",
                            "schema": {
                                "type": "integer",
                                "format": "int32",
                                "default": 100000
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The recipient number was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttributeValuesWithCount"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttributeValuesWithCount"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Attribute name is not provided or attribute name does not exist in current recipient list"
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipients/{recipientListId}/distinctvalues": {
                "get": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Get all distinct attribute values of a recipient",
                    "operationId": "retrieveDistinctValues",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "targetGroup",
                            "in": "query",
                            "description": "Target group ID",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "attributeName",
                            "in": "query",
                            "description": "Field name (e.g. firstname, lastname etc.) to be retrieved for distinct values",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "threshold",
                            "in": "query",
                            "description": "Number of characters that are examined",
                            "schema": {
                                "type": "integer",
                                "format": "int32",
                                "default": 100000
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The distinct values were retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttributeValues"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestAttributeValues"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Attribute name is not provided or attribute name does not exist in current recipient list"
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipients/{recipientListId}/modify": {
                "put": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Update attribute values of multiple recipients",
                    "operationId": "modifyRecipientsAttributes",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateRecipientsRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The recipients' attributes were updated. The IDs of recipients for which attributes could not be updated are displayed as failedIds in the response body.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientsCreationModify"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientsCreationModify"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Update attribute values of recipients filtered by a target group",
                    "operationId": "modifyRecipientsAttributesByTargetGroup",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModifyRecipientsAttributesRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The recipient's attributes were updated.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestRecipient"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestRecipient"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The target group is not provided or recipient's attribute is not recognized or its value cannot be parsed. Ensure that \"target group\" is added to the request and that the required parameters are correct."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipients/{recipientListId}/{recipientId}": {
                "get": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Get information about a recipient",
                    "description": "Get detailed information about a recipient, such as recipient ID, creation date and modification date.",
                    "operationId": "getRecipient",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "attributeNames",
                            "in": "query",
                            "description": "Comma-separated names of the fields whose recipient data is to be retrieved. Example: \"firstname,lastname\". <p><b>Note:</b> You must use the internal names of the recipient list fields. <br>To retrieve the attribute names of a recipient list, use the <a href=\"https://api.campaign.episerver.net/apidoc/index.html#/Recipient%20lists/getRecipientListAttributeNames\" target=\"_blank\">getRecipientListAttributeNames</a> operation.</br></p>",
                            "explode": false,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        {
                            "name": "includeOptinData",
                            "in": "query",
                            "description": "Specify whether the opt-in data fields should be returned. Only applicable for opt-in list",
                            "schema": {
                                "type": "boolean"
                            }
                        },
                        {
                            "name": "recipientId",
                            "in": "path",
                            "description": "Recipient ID (usually the email address)",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The recipient was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipient"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipient"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The recipient could not be found. Ensure that the required parameters such as \"recipientId\" and \"recipientListId\" are correct and the recipient exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Update attribute values of a recipient",
                    "operationId": "modifyRecipientAttributes",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "recipientId",
                            "in": "path",
                            "description": "Recipient ID (usually the email address)",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModifyRecipientAttributesRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The recipient's attributes were updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipient"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipient"
                                    }
                                }
                            }
                        },
                        "409": {
                            "description": "The indicated recipient list is not assigned to the indicated client. Ensure that \"clientId\" and \"recipientListId\" are correct and that the \"recipientListId\" is assigned to the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Delete a recipient from a recipient list",
                    "operationId": "deleteRecipient",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "recipientId",
                            "in": "path",
                            "description": "Recipient ID (usually the email address)",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The recipient was deleted successfully from the recipient list."
                        },
                        "404": {
                            "description": "The recipient could not be found in the recipient list. Ensure that the required parameters such as \"recipientListId\" or \"recipientId\" are correct and the recipient exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipients/{recipientListId}/{recipientId}/optinstatus": {
                "get": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Check status optin of given recipient",
                    "description": "Check whether a recipient is opted in or not",
                    "operationId": "getOptinStatus",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "recipientId",
                            "in": "path",
                            "description": "Recipient ID (usually the email address)",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The recipient's optin status was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "string"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The recipient list is not of type opt-in"
                        },
                        "404": {
                            "description": "The recipient could not be found. Ensure that the required parameters such as \"recipientId\" and \"recipientListId\" are correct and the recipient exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipients/{recipientListId}/{recipientId}/valid": {
                "get": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Check whether a recipient is valid",
                    "description": "Check if a recipient can receive mailings. Recipients are valid if they are not blacklisted, not unsubscribed and did not exceed the bounce limit.",
                    "operationId": "isRecipientValid",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mediaType",
                            "in": "query",
                            "description": "Media type <p><i>Default value</i> : EMAIL</p>",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "EMAIL",
                                    "FAX",
                                    "SMS",
                                    "LETTER",
                                    "PUSH",
                                    "PRINT"
                                ]
                            }
                        },
                        {
                            "name": "recipientId",
                            "in": "path",
                            "description": "Recipient ID (usually the email address)",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "path",
                            "description": "Recipient list ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The recipient's validation result was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientValid"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestRecipientValid"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The recipient could not be found. Ensure that the required parameters such as \"recipientId\" and \"recipientListId\" are correct and the recipient exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipients/trackingoptout": {
                "post": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Create a tracking opt-out",
                    "description": "Create a tracking opt-out to deactivate the tracking of action-based data (opens and clicks) of a recipient.",
                    "operationId": "createTrackingOptOut",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipientBasedRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The tracking opt-out was created."
                        },
                        "406": {
                            "description": "The tracking opt-out is not activated for this client. Ensure that the 'clientId' is correct and the required feature is enabled in the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Delete a tracking opt-out",
                    "description": "Delete a tracking opt-out to reactivate the tracking of action-based data (opens and clicks) of a recipient.",
                    "operationId": "deleteTrackingOptOut",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientId",
                            "in": "query",
                            "description": "Recipient ID (usually the email address)",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The tracking opt-out was deleted."
                        },
                        "406": {
                            "description": "The tracking opt-out is not activated for this client. Ensure that the 'clientId' is correct and the required feature is enabled in the indicated client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipients": {
                "get": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Check whether a recipient is valid in multiple recipient lists",
                    "description": "Check if a recipient can receive mailings in multiple recipient lists. Recipients are valid if they are not blacklisted, not unsubscribed and did not exceed the bounce limit.",
                    "operationId": "isRecipientValid_1",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "recipientId",
                            "in": "query",
                            "description": "Recipient ID (usually the email address)",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientListIds",
                            "in": "query",
                            "description": "Comma-separated list of recipient list IDs <p><b>Note:</b> If you do not specify a recipient list ID or the recipient list ID is invalid or does not exist, the response body will be empty.</p>",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        },
                        {
                            "name": "mediaType",
                            "in": "query",
                            "description": "Media type",
                            "schema": {
                                "type": "string",
                                "default": "EMAIL",
                                "enum": [
                                    "EMAIL",
                                    "FAX",
                                    "SMS",
                                    "LETTER",
                                    "PUSH",
                                    "PRINT"
                                ]
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The recipient's validation result was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestRecipientValid"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestRecipientValid"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The required parameter 'recipientId' is not provided."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Delete the recipient history",
                    "description": "Delete all action data of a recipient.",
                    "operationId": "wipeRecipientHistory",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "recipientKey",
                            "in": "query",
                            "description": "Recipient key (that is, the recipient ID)",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "reason",
                            "in": "query",
                            "description": "Reason for deletion",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "202": {
                            "description": "The recipient history deletion was initiated successfully."
                        },
                        "400": {
                            "description": "The required parameter 'recipientKey' is not provided. Check for the recipient key (that is, the recipient ID) and add it to the request."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/recipients/updaterecipientid": {
                "post": {
                    "tags": [
                        "Recipients"
                    ],
                    "summary": "Update a recipient ID",
                    "operationId": "updateRecipientId",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateRecipientIdRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The recipient ID was updated successfully."
                        },
                        "400": {
                            "description": "Recipient ID update is not possible because of a general error."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/responses/bounces/{recipientId}": {
                "get": {
                    "tags": [
                        "Responses"
                    ],
                    "summary": "Get the total number of hard or soft bounces of a recipient",
                    "description": "Get the total number of hard or soft bounces of a recipient to determine if a recipient will receive further mailings.",
                    "operationId": "getBounceCounter",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "mediaType",
                            "in": "query",
                            "description": "Media type of the mailing",
                            "schema": {
                                "type": "string",
                                "default": "EMAIL",
                                "enum": [
                                    "EMAIL",
                                    "FAX",
                                    "SMS",
                                    "LETTER",
                                    "PUSH",
                                    "PRINT"
                                ]
                            }
                        },
                        {
                            "name": "category",
                            "in": "query",
                            "description": "Type of the response<p><i>Available values</i> : hardbounce, softbounce</p>",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "recipientId",
                            "in": "path",
                            "description": "Recipient ID (usually the email address)",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The total number of hard or soft bounces was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Responses"
                    ],
                    "summary": "Delete hard and soft bounces",
                    "description": "Delete hard and soft bounces of a recipient.",
                    "operationId": "resetBounceCounter",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "mediaType",
                            "in": "query",
                            "description": "Media type of the mailing<p><i>Default value</i> : EMAIL</p>",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "EMAIL",
                                    "FAX",
                                    "SMS",
                                    "LETTER",
                                    "PUSH",
                                    "PRINT"
                                ]
                            }
                        },
                        {
                            "name": "recipientId",
                            "in": "path",
                            "description": "Recipient ID (usually the email address)",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The hard and soft bounces of the indicated recipient were deleted successfully."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/responses/bounces/{recipientId}/thresholdExceeded": {
                "get": {
                    "tags": [
                        "Responses"
                    ],
                    "summary": "Get information about whether a recipient has exceeded the hard or the soft bounce threshold",
                    "operationId": "isBounceCounterThresholdExceeded",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "mediaType",
                            "in": "query",
                            "description": "Media type of the mailing<p><i>Default value</i> : EMAIL</p>",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "EMAIL",
                                    "FAX",
                                    "SMS",
                                    "LETTER",
                                    "PUSH",
                                    "PRINT"
                                ]
                            }
                        },
                        {
                            "name": "recipientId",
                            "in": "path",
                            "description": "Recipient ID (usually the email address)",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The information about whether the recipient has exceeded the hard or soft bounce threshold was retrieved.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBounceCounterThresholdExceeded"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestBounceCounterThresholdExceeded"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/responses/bounces": {
                "get": {
                    "tags": [
                        "Responses"
                    ],
                    "summary": "Get the maximum number of allowed bounces of a recipient",
                    "description": "Get the maximum number of hard or soft bounces a recipient can produce before the recipient will stop to get further mailings.",
                    "operationId": "getBounceCounterThreshold",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "category",
                            "in": "query",
                            "description": "Response type<p><i>Available values</i> : hardbounce, softbounce</p>",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Maximum number of allowed hard or soft bounces was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/responses": {
                "get": {
                    "tags": [
                        "Responses"
                    ],
                    "summary": "Get information about all responses of a recipient",
                    "description": "Get detailed information about all responses of a recipient, such as response type, response subject and rule name of the response.",
                    "operationId": "selectResponses",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of retrieved responses <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "query",
                            "description": "Mailing ID (only required if the \"recipientIds\" parameter is not specified)",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "category",
                            "in": "query",
                            "description": "Response type",
                            "required": true,
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "hardbounce",
                                    "softbounce",
                                    "autoresponder",
                                    "unknown"
                                ]
                            }
                        },
                        {
                            "name": "recipientIds",
                            "in": "query",
                            "description": "Comma-separated list of recipient IDs (only required if the \"mailingId\" parameter is not specified)",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The responses were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestResponseStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestResponseStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "None of the mandatory parameters were provided (category and mailingId/recipientIds), or limit parameter is greater than 10000."
                        },
                        "404": {
                            "description": "If a mailingId was requested and that mailingId was not found. If one or more recipientIds were requested and none of them were found."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/unsubscribes/count": {
                "get": {
                    "tags": [
                        "Unsubscribes"
                    ],
                    "summary": "Get the total number of unsubscribes",
                    "description": "Get the total number of recipients that are currently unsubscribed in a client.",
                    "operationId": "countUnsubscribes",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "mediaType",
                            "in": "query",
                            "description": "Media type of the delivery channel<p><i>Default value</i> : GLOBAL</p>",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "EMAIL",
                                    "FAX",
                                    "SMS",
                                    "LETTER",
                                    "PUSH",
                                    "PRINT"
                                ]
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The total number of unsubscribes was retrieved successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestCount"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/unsubscribes": {
                "get": {
                    "tags": [
                        "Unsubscribes"
                    ],
                    "summary": "Get information about all unsubscribe entries",
                    "description": "Get detailed information about all unsubscribe entries of multiple recipients, such as unsubscribe reason or date and time of creation.",
                    "operationId": "selectUnsubscribes",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list <p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of unsubscribe entries <p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "description": "Sort result by specific criteria",
                            "schema": {
                                "type": "string",
                                "default": "created",
                                "enum": [
                                    "id",
                                    "reason",
                                    "recipientListId",
                                    "mailingId",
                                    "created"
                                ]
                            }
                        },
                        {
                            "name": "mediaType",
                            "in": "query",
                            "description": "Media type of the delivery channel<p><i>Default value</i> : GLOBAL</p>",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "EMAIL",
                                    "FAX",
                                    "SMS",
                                    "LETTER",
                                    "PUSH",
                                    "PRINT"
                                ]
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "query",
                            "description": "ID of the recipient list to which the recipients are assigned (only if recipient list based unsubscribe is set)",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "recipientIds",
                            "in": "query",
                            "description": "Comma-separated list of recipient IDs",
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The unsubscribes were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestUnsubscribeStreamingCollection"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestUnsubscribeStreamingCollection"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "Invalid limit request. Change the limit to less than 10000."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Unsubscribes"
                    ],
                    "summary": "Add recipients to the internal unsubscribe list or unsubscribe recipients (max. 5000)",
                    "description": "Add multiple recipients to a unsubscribe list or unsubscribe multiple recipients based on mailing IDs.",
                    "operationId": "createUnsubscribes",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateUnsubscribesRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "At least one recipient was successfully added to the internal unsubscribe list. Please check the result for more details.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestUnsubscribesCreateResult"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestUnsubscribesCreateResult"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The recipients could not be unsubscribed. Ensure that you did not exceed the limit of 5000 IDs."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Unsubscribes"
                    ],
                    "summary": "Remove one or multiple recipients from the internal unsubscribe list",
                    "operationId": "removeUnsubscribes",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "mediaType",
                            "in": "query",
                            "description": "Media type of the delivery channel<p><i>Default value</i> : GLOBAL</p>",
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "EMAIL",
                                    "FAX",
                                    "SMS",
                                    "LETTER",
                                    "PUSH",
                                    "PRINT"
                                ]
                            }
                        },
                        {
                            "name": "recipientListId",
                            "in": "query",
                            "description": "ID of the recipient list to which the recipients are assigned (only if recipient list based unsubscribe is set)",
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "recipientIds",
                            "in": "query",
                            "description": "Comma-separated recipient IDs",
                            "required": true,
                            "explode": false,
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The removal was initiated successfully."
                        },
                        "404": {
                            "description": "Unsubscribe could not be found for the indicated recipient ID. Ensure that the 'recipientId' is correct and the recipient exists."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/users/rotatepassword": {
                "post": {
                    "tags": [
                        "Users"
                    ],
                    "summary": "Rotate a password. Please be aware that after rotation it can take some minutes until the new password can be used.",
                    "operationId": "rotatePassword",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "202": {
                            "description": "The request for password rotation was accepted.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestUser"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestUser"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The password could not be rotated (incomplete or wrong request).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestUser"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestUser"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/webhooks/{webhookId}/activate": {
                "post": {
                    "tags": [
                        "Webhooks"
                    ],
                    "summary": "Activate a webhook",
                    "description": "Activate a webhook to start sending event data.",
                    "operationId": "activateWebhook",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "webhookId",
                            "in": "path",
                            "description": "Webhook ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The webhook was activated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWebhook"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWebhook"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The webhook is already in status \"activated\"."
                        },
                        "404": {
                            "description": "The webhook could not be found. Ensure that the required parameters such as \"webhookId\" are correct and the webhook exists."
                        },
                        "409": {
                            "description": "The webhook ID is not assigned to the current client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/webhooks": {
                "get": {
                    "tags": [
                        "Webhooks"
                    ],
                    "summary": "Get information about all webhooks",
                    "description": "Get detailed information about all webhooks, such as webhook ID, event data type and webhook status.",
                    "operationId": "selectWebhooks",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "sort",
                            "in": "query",
                            "description": "Sort result by specific criteria",
                            "schema": {
                                "type": "string",
                                "default": "CREATED",
                                "enum": [
                                    "ID",
                                    "MAILING_GROUP",
                                    "TYPE",
                                    "STATUS",
                                    "PAYLOAD_FORMAT",
                                    "TARGET_URL",
                                    "INTEGRATION_ID",
                                    "CREATED",
                                    "MODIFIED"
                                ]
                            }
                        },
                        {
                            "name": "direction",
                            "in": "query",
                            "description": "Sort order",
                            "schema": {
                                "type": "string",
                                "default": "DESC",
                                "enum": [
                                    "ASC",
                                    "DESC"
                                ]
                            }
                        },
                        {
                            "name": "offset",
                            "in": "query",
                            "description": "Starting point of the result list<p><i>Default value</i> : 0</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        {
                            "name": "limit",
                            "in": "query",
                            "description": "Maximum number of webhooks<p><i>Default value</i> : 100</p>",
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The webhooks were retrieved successfully (empty result if none was found).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestWebhook"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestWebhook"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "post": {
                    "tags": [
                        "Webhooks"
                    ],
                    "summary": "Create a webhook",
                    "operationId": "createWebhook",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "The webhook was created successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWebhook"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWebhook"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The webhook could not be created (either type or format was wrong).",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWebhook"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWebhook"
                                    }
                                }
                            }
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/webhooks/{webhookId}/deactivate": {
                "post": {
                    "tags": [
                        "Webhooks"
                    ],
                    "summary": "Deactivate a webhook",
                    "description": "Deactivate a webhook to stop sending event data.",
                    "operationId": "deactivateWebhook",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "webhookId",
                            "in": "path",
                            "description": "Webhook ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The webhook was deactivated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWebhook"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWebhook"
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The webhook is not in status \"activated\"."
                        },
                        "404": {
                            "description": "The webhook could not be found. Ensure that the required parameters such as \"webhookId\" are correct and the webhook exists."
                        },
                        "409": {
                            "description": "The webhook ID is not assigned to the current client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/webhooks/{webhookId}": {
                "put": {
                    "tags": [
                        "Webhooks"
                    ],
                    "summary": "Update a webhook",
                    "operationId": "updateWebhook",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "webhookId",
                            "in": "path",
                            "description": "Webhook ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookRequestData"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "The webhook was updated successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWebhook"
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/RestWebhook"
                                    }
                                }
                            }
                        },
                        "404": {
                            "description": "The webhook could not be found. Ensure that the required parameters such as \"webhookId\" are correct and the webhook exists."
                        },
                        "409": {
                            "description": "The webhook ID is not assigned to the current client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                },
                "delete": {
                    "tags": [
                        "Webhooks"
                    ],
                    "summary": "Delete a webhook",
                    "operationId": "deleteWebhook",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "webhookId",
                            "in": "path",
                            "description": "Webhook ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "The webhook was deleted successfully."
                        },
                        "400": {
                            "description": "The webhook could not be deleted as it is in status \"activated\". The webhook must be in status \"deactivated\"."
                        },
                        "404": {
                            "description": "The webhook could not be found. Ensure that the required parameters such as \"webhookId\" are correct and the webhook exists."
                        },
                        "409": {
                            "description": "The webhook ID is not assigned to the current client."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            },
            "/{clientId}/webhooks/{webhookId}/verify": {
                "get": {
                    "tags": [
                        "Webhooks"
                    ],
                    "summary": "Verify a webhook",
                    "description": "Verify a webhook. The request is sent to the configured target URL to check if the webhook is ready to use. If successful, the value \"200\" is returned in the \"httpStatusCode\" field of the JSON response. In case of errors check the \"responseBody\" field.",
                    "operationId": "verifyWebhook",
                    "parameters": [
                        {
                            "name": "clientId",
                            "in": "path",
                            "description": "Client ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "webhookId",
                            "in": "path",
                            "description": "Webhook ID",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "mailingId",
                            "in": "query",
                            "description": "ID of a valid mailing (e.g. test mailing in Smart Campaigns)",
                            "required": true,
                            "schema": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        {
                            "name": "numberOfEvents",
                            "in": "query",
                            "description": "Number of events to send (max. 100)",
                            "schema": {
                                "maximum": 100,
                                "minimum": 1,
                                "type": "integer",
                                "format": "int32",
                                "default": 1
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "The webhook test request was executed successfully.",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestWebhookVerify"
                                        }
                                    }
                                },
                                "application/vnd.optivo.broadmail.v1+json": {
                                    "schema": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/RestWebhookVerify"
                                        }
                                    }
                                }
                            }
                        },
                        "400": {
                            "description": "The verification of the webhook is not supported for the provided type."
                        }
                    },
                    "security": [
                        {
                            "Authorization": []
                        }
                    ]
                }
            }
        },
        "components": {
            "schemas": {
                "RestCount": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "description": "Total number",
                            "format": "int64"
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "RestMultiPartRequestSchema": {
                    "type": "object",
                    "properties": {
                        "file": {
                            "type": "string",
                            "description": "file to be uploaded",
                            "format": "binary"
                        },
                        "name": {
                            "type": "string",
                            "description": "name of the attachment"
                        }
                    }
                },
                "RestImage": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Image ID",
                            "format": "int64"
                        },
                        "owner": {
                            "type": "string",
                            "description": "Client ID"
                        },
                        "name": {
                            "type": "string",
                            "description": "Image name"
                        },
                        "url": {
                            "type": "string",
                            "description": "Image url"
                        },
                        "height": {
                            "type": "integer",
                            "description": "Image height",
                            "format": "int32"
                        },
                        "width": {
                            "type": "integer",
                            "description": "Image width",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "RestApiLink": {
                    "type": "object",
                    "properties": {
                        "href": {
                            "type": "string"
                        },
                        "rel": {
                            "type": "string"
                        }
                    }
                },
                "RestImageStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestImage"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "RestAttachment": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Attachment ID",
                            "format": "int64"
                        },
                        "owner": {
                            "type": "integer",
                            "description": "Client ID",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string",
                            "description": "Attachment name"
                        },
                        "uploaded": {
                            "type": "boolean",
                            "description": "If true, the attachment was successfully uploaded"
                        },
                        "fileName": {
                            "type": "string",
                            "description": "File name"
                        },
                        "type": {
                            "type": "string",
                            "description": "File type of the attachment"
                        },
                        "mimeType": {
                            "type": "string",
                            "description": "Mime type of the attachment"
                        },
                        "size": {
                            "type": "integer",
                            "description": "Attachment size",
                            "format": "int64"
                        },
                        "created": {
                            "type": "string",
                            "description": "Date and time of creation",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Date and time of modification",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "AttachmentRequestData": {
                    "type": "object",
                    "properties": {
                        "mimeType": {
                            "type": "string",
                            "description": "Mime type of the attachment"
                        },
                        "name": {
                            "type": "string",
                            "description": "Attachment name"
                        },
                        "fileName": {
                            "type": "string",
                            "description": "File name of the attachment"
                        }
                    }
                },
                "MultiPartRequest": {
                    "type": "object",
                    "properties": {
                        "file": {
                            "type": "string",
                            "description": "file to be uploaded",
                            "format": "binary"
                        },
                        "name": {
                            "type": "string",
                            "description": "name of the attachment"
                        }
                    }
                },
                "RestPersonalizedAttachment": {
                    "type": "object",
                    "properties": {
                        "fileSize": {
                            "type": "integer",
                            "description": "File size in bytes",
                            "format": "int64"
                        },
                        "expiresAt": {
                            "type": "string",
                            "description": "Expiry date",
                            "format": "date-time"
                        },
                        "contentType": {
                            "type": "string",
                            "description": "File content type"
                        },
                        "id": {
                            "type": "integer",
                            "description": "Attachment ID",
                            "format": "int64"
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "fileName": {
                            "type": "string",
                            "description": "File name"
                        }
                    },
                    "description": "List of uploaded attachments"
                },
                "RestPersonalizedAttachmentUpload": {
                    "type": "object",
                    "properties": {
                        "uploadedFiles": {
                            "type": "array",
                            "description": "List of uploaded attachments",
                            "items": {
                                "$ref": "#/components/schemas/RestPersonalizedAttachment"
                            }
                        },
                        "token": {
                            "type": "string",
                            "description": "Personalized attachment token for all files uploaded - can be used when sending transactional mailings"
                        }
                    }
                },
                "BodyPart": {
                    "type": "object",
                    "properties": {
                        "contentDisposition": {
                            "$ref": "#/components/schemas/ContentDisposition"
                        },
                        "entity": {
                            "type": "object"
                        },
                        "headers": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "mediaType": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "subtype": {
                                    "type": "string"
                                },
                                "parameters": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                },
                                "wildcardType": {
                                    "type": "boolean"
                                },
                                "wildcardSubtype": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "messageBodyWorkers": {
                            "$ref": "#/components/schemas/MessageBodyWorkers"
                        },
                        "parent": {
                            "$ref": "#/components/schemas/MultiPart"
                        },
                        "providers": {
                            "type": "object"
                        },
                        "parameterizedHeaders": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ParameterizedHeader"
                                }
                            }
                        }
                    }
                },
                "ContentDisposition": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "parameters": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "fileName": {
                            "type": "string"
                        },
                        "creationDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "modificationDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "readDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "size": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "FormDataBodyPart": {
                    "type": "object",
                    "properties": {
                        "contentDisposition": {
                            "$ref": "#/components/schemas/ContentDisposition"
                        },
                        "entity": {
                            "type": "object"
                        },
                        "headers": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "mediaType": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "subtype": {
                                    "type": "string"
                                },
                                "parameters": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                },
                                "wildcardType": {
                                    "type": "boolean"
                                },
                                "wildcardSubtype": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "messageBodyWorkers": {
                            "$ref": "#/components/schemas/MessageBodyWorkers"
                        },
                        "parent": {
                            "$ref": "#/components/schemas/MultiPart"
                        },
                        "providers": {
                            "type": "object"
                        },
                        "formDataContentDisposition": {
                            "$ref": "#/components/schemas/FormDataContentDisposition"
                        },
                        "simple": {
                            "type": "boolean"
                        },
                        "name": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        },
                        "parameterizedHeaders": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ParameterizedHeader"
                                }
                            }
                        }
                    },
                    "description": "Attachment files",
                    "format": "binary"
                },
                "FormDataContentDisposition": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "parameters": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "fileName": {
                            "type": "string"
                        },
                        "creationDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "modificationDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "readDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "size": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "MessageBodyWorkers": {
                    "type": "object"
                },
                "MultiPart": {
                    "type": "object",
                    "properties": {
                        "contentDisposition": {
                            "$ref": "#/components/schemas/ContentDisposition"
                        },
                        "entity": {
                            "type": "object"
                        },
                        "headers": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "mediaType": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "subtype": {
                                    "type": "string"
                                },
                                "parameters": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                },
                                "wildcardType": {
                                    "type": "boolean"
                                },
                                "wildcardSubtype": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "messageBodyWorkers": {
                            "$ref": "#/components/schemas/MessageBodyWorkers"
                        },
                        "parent": {
                            "$ref": "#/components/schemas/MultiPart"
                        },
                        "providers": {
                            "type": "object"
                        },
                        "bodyParts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/BodyPart"
                            }
                        },
                        "parameterizedHeaders": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ParameterizedHeader"
                                }
                            }
                        }
                    }
                },
                "ParameterizedHeader": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        },
                        "parameters": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                },
                "RestAttachmentStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestAttachment"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "RestBlacklistedEntry": {
                    "type": "object",
                    "properties": {
                        "pattern": {
                            "type": "string",
                            "description": "Address pattern"
                        },
                        "blacklisted": {
                            "type": "boolean",
                            "description": "If true, the entry is blocklisted"
                        }
                    }
                },
                "BlacklistEntryRequestData": {
                    "required": [
                        "entry"
                    ],
                    "type": "object",
                    "properties": {
                        "reason": {
                            "type": "string",
                            "description": "Reason for creating a blocklist entry"
                        },
                        "entry": {
                            "type": "string",
                            "description": "Pattern of the blocklist entry"
                        }
                    }
                },
                "RestBlacklistEntry": {
                    "type": "object",
                    "properties": {
                        "mailingGroupId": {
                            "type": "integer",
                            "description": "Client ID",
                            "format": "int64"
                        },
                        "pattern": {
                            "type": "string",
                            "description": "Pattern for all mailing addresses that push into the blocklist"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Reason for adding a pattern into the blocklist"
                        },
                        "created": {
                            "type": "string",
                            "description": "Date and time of creation",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Date and time of modification",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "RestBlacklistEntryStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestBlacklistEntry"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "ConfirmationMailingRequestData": {
                    "required": [
                        "content",
                        "recipientListIds",
                        "senderAddress",
                        "subject"
                    ],
                    "type": "object",
                    "properties": {
                        "recipientListIds": {
                            "type": "array",
                            "description": "Comma-separated list of recipient list IDs",
                            "items": {
                                "type": "integer",
                                "description": "Comma-separated list of recipient list IDs",
                                "format": "int64"
                            }
                        },
                        "subject": {
                            "type": "string",
                            "description": "Mailing subject"
                        },
                        "senderAddress": {
                            "type": "string",
                            "description": "Mailing sender address"
                        },
                        "content": {
                            "type": "string",
                            "description": "Mailing content (plain text)"
                        },
                        "subjectForTargetGroup": {
                            "type": "string",
                            "description": "Subject for a specific target group. Set \"subject.[targetGroupId]\" in request data (only email).<p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "icon": {
                            "type": "string",
                            "description": "Icon for the Web Push message"
                        },
                        "description": {
                            "type": "string",
                            "description": "Mailing description"
                        },
                        "payload": {
                            "type": "string",
                            "description": "Payload parameters for Mobile Push and Web Push. Set \"payload.[name]\" in request data.<p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "image": {
                            "type": "string",
                            "description": "Image for the Web Push message"
                        },
                        "mediaCode": {
                            "type": "string",
                            "description": "Media code (only email)"
                        },
                        "archiveEnabled": {
                            "type": "boolean",
                            "description": "Toggle whether a mailing can be archived or not (only applicable for transactional mailings)"
                        },
                        "replyToAddress": {
                            "type": "string",
                            "description": "Reply-to address (only email)"
                        },
                        "pushType": {
                            "type": "string",
                            "description": "Push type",
                            "enum": [
                                "MOBILE",
                                "WEB"
                            ]
                        },
                        "replyToName": {
                            "type": "string",
                            "description": "Reply-to mailing name (only email)"
                        },
                        "senderName": {
                            "type": "string",
                            "description": "Mailing sender name (only email)"
                        },
                        "archivePeriod": {
                            "type": "string",
                            "description": "Period suggesting for how long a mailing should be archived (only applicable for transactional mailings)",
                            "enum": [
                                "ONE_MONTH",
                                "TWO_MONTHS",
                                "THREE_MONTHS",
                                "SIX_MONTHS",
                                "ONE_YEAR",
                                "TWO_YEARS"
                            ]
                        },
                        "resetReplyToAddress": {
                            "type": "boolean",
                            "description": "If true, the local part of the reply-to address is reset"
                        },
                        "iconMetaData": {
                            "type": "string",
                            "description": "Icon meta data. Configure \"icon.[attribute]\".<p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "clickAction": {
                            "type": "string",
                            "description": "Click action for the Web Push message"
                        },
                        "resetPayload": {
                            "type": "boolean",
                            "description": "If true, all payload parameters are deleted. All set parameters within this request remain (only Web Push mailings)."
                        },
                        "name": {
                            "type": "string",
                            "description": "Mailing name"
                        }
                    }
                },
                "Filter": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "Point": {
                    "type": "object",
                    "properties": {
                        "x": {
                            "type": "integer",
                            "format": "int32",
                            "xml": {
                                "attribute": true
                            }
                        },
                        "y": {
                            "type": "integer",
                            "format": "int32",
                            "xml": {
                                "attribute": true
                            }
                        }
                    },
                    "description": "Grid location point",
                    "xml": {
                        "name": "Point"
                    }
                },
                "RestMessageNode": {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string",
                            "description": "Node ID"
                        },
                        "name": {
                            "type": "string",
                            "description": "Mailing name"
                        },
                        "mailingId": {
                            "type": "integer",
                            "description": "Mailing ID",
                            "format": "int64"
                        },
                        "description": {
                            "type": "string",
                            "description": "Mailing description"
                        },
                        "mediaType": {
                            "type": "string",
                            "description": "Media type of the mailing"
                        },
                        "status": {
                            "type": "string",
                            "description": "Current status of the mailing",
                            "enum": [
                                "invalid",
                                "activationRequired",
                                "activated",
                                "canceled",
                                "paused",
                                "running",
                                "finished"
                            ]
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Modification date",
                            "format": "date-time"
                        },
                        "started": {
                            "type": "string",
                            "description": "Start date of the mailing",
                            "format": "date-time"
                        },
                        "finished": {
                            "type": "string",
                            "description": "Finish date of the mailing",
                            "format": "date-time"
                        },
                        "senderAddress": {
                            "type": "string",
                            "description": "Email address of the sender"
                        },
                        "senderName": {
                            "type": "string",
                            "description": "Sender name"
                        },
                        "replyToAddress": {
                            "type": "string",
                            "description": "Email address for reply emails"
                        },
                        "replyToName": {
                            "type": "string",
                            "description": "Name for reply emails"
                        },
                        "subject": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "mediaCode": {
                            "type": "string",
                            "description": "Media code of the mailing"
                        },
                        "format": {
                            "type": "string",
                            "description": "Mailing format"
                        },
                        "dispatchOption": {
                            "type": "string",
                            "description": "Dispatch options of the print mailing"
                        },
                        "dispatchStrategyOption": {
                            "type": "string",
                            "description": "Dispatch strategy of the print mailing"
                        },
                        "accumulateMessagesForDays": {
                            "type": "integer",
                            "description": "Number of messages per day",
                            "format": "int32"
                        },
                        "pushType": {
                            "type": "string",
                            "description": "Push type (push message)",
                            "enum": [
                                "MOBILE",
                                "WEB"
                            ]
                        },
                        "icon": {
                            "type": "string",
                            "description": "Icon (push message)"
                        },
                        "clickAction": {
                            "type": "string",
                            "description": "Click action (push message)"
                        },
                        "archiveEnabled": {
                            "type": "boolean",
                            "description": "Is mail archiving enabled"
                        },
                        "archivePeriod": {
                            "type": "string",
                            "description": "Mail archiving period",
                            "enum": [
                                "ONE_MONTH",
                                "TWO_MONTHS",
                                "THREE_MONTHS",
                                "SIX_MONTHS",
                                "ONE_YEAR",
                                "TWO_YEARS"
                            ]
                        },
                        "smsParts": {
                            "type": "integer",
                            "description": "Number of SMS parts",
                            "format": "int32"
                        },
                        "deeplinks": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "description": "Deeplinks of the push message"
                            },
                            "description": "Deeplinks of the push message"
                        },
                        "contentType": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "subtype": {
                                    "type": "string"
                                },
                                "parameters": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                },
                                "wildcardType": {
                                    "type": "boolean"
                                },
                                "wildcardSubtype": {
                                    "type": "boolean"
                                }
                            },
                            "description": "Content type of the mailing"
                        },
                        "payload": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "description": "Payload of the push message"
                            },
                            "description": "Payload of the push message"
                        },
                        "expiry": {
                            "type": "string",
                            "description": "Expiry date and time of the push message",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "description": "Restful links",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Restful links"
                            }
                        },
                        "content": {
                            "type": "string",
                            "description": "Mailing content"
                        },
                        "gridLocation": {
                            "$ref": "#/components/schemas/Point"
                        }
                    }
                },
                "RestRecipientListsNode": {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string",
                            "description": "Node ID"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node ID"
                        },
                        "recipientListIds": {
                            "type": "array",
                            "description": "List of recipient list IDs",
                            "items": {
                                "type": "integer",
                                "description": "List of recipient list IDs",
                                "format": "int64"
                            }
                        },
                        "gridLocation": {
                            "$ref": "#/components/schemas/Point"
                        },
                        "links": {
                            "type": "array",
                            "description": "Links for further requests",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Links for further requests"
                            }
                        }
                    }
                },
                "RestSmartCampaign": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Campaign ID",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string",
                            "description": "Campaign name"
                        },
                        "mailingGroupId": {
                            "type": "integer",
                            "description": "Client ID",
                            "format": "int64"
                        },
                        "description": {
                            "type": "string",
                            "description": "Mailing description"
                        },
                        "status": {
                            "type": "string",
                            "description": "Current campaign status",
                            "enum": [
                                "invalid",
                                "activationRequired",
                                "activated",
                                "canceled",
                                "paused",
                                "running",
                                "finished"
                            ]
                        },
                        "type": {
                            "type": "string",
                            "description": "Campaign type",
                            "enum": [
                                "regular",
                                "event",
                                "confirmation"
                            ]
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Modification date",
                            "format": "date-time"
                        },
                        "started": {
                            "type": "string",
                            "description": "Start date of the campaign",
                            "format": "date-time"
                        },
                        "finished": {
                            "type": "string",
                            "description": "Finish date of the campaign",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "recipientLists": {
                            "$ref": "#/components/schemas/RestRecipientListsNode"
                        },
                        "targetGroups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestTargetGroupNode"
                            }
                        },
                        "messages": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestMessageNode"
                            }
                        },
                        "message": {
                            "$ref": "#/components/schemas/RestMessageNode"
                        }
                    }
                },
                "RestTargetGroupNode": {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string",
                            "description": "Node ID"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node ID"
                        },
                        "name": {
                            "type": "string",
                            "description": "Target group name"
                        },
                        "targetGroup": {
                            "$ref": "#/components/schemas/Filter"
                        },
                        "gridLocation": {
                            "$ref": "#/components/schemas/Point"
                        },
                        "links": {
                            "type": "array",
                            "description": "Links for further requests",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Links for further requests"
                            }
                        }
                    }
                },
                "MultiRequest": {
                    "type": "object",
                    "properties": {
                        "content": {
                            "type": "string",
                            "description": "New mailing content to be uploaded"
                        }
                    }
                },
                "TestMailingReport": {
                    "type": "object",
                    "properties": {
                        "recipientStatus": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "description": "Sending status of the recipients",
                                "enum": [
                                    "enqueued",
                                    "sending",
                                    "sent",
                                    "failed"
                                ]
                            },
                            "description": "Sending status of the recipients"
                        },
                        "status": {
                            "type": "string",
                            "description": "Current status of the mailing",
                            "enum": [
                                "invalid",
                                "activationRequired",
                                "activated",
                                "canceled",
                                "paused",
                                "running",
                                "finished"
                            ]
                        },
                        "mailingId": {
                            "type": "integer",
                            "description": "Mailing ID",
                            "format": "int64"
                        },
                        "mediaType": {
                            "type": "string",
                            "description": "Media type"
                        },
                        "started": {
                            "type": "string",
                            "description": "Start date of the mailing",
                            "format": "date-time"
                        },
                        "reportDate": {
                            "type": "string",
                            "description": "Report date",
                            "format": "date-time"
                        },
                        "finished": {
                            "type": "string",
                            "description": "Finish date of the mailing",
                            "format": "date-time"
                        }
                    }
                },
                "TestMailingStartedReport": {
                    "type": "object",
                    "properties": {
                        "mailingId": {
                            "type": "integer",
                            "description": "Mailing ID",
                            "format": "int64"
                        },
                        "validRecipientAddresses": {
                            "type": "array",
                            "description": "Valid recipient addresses",
                            "items": {
                                "type": "string",
                                "description": "Valid recipient addresses"
                            }
                        },
                        "userIdsOfRecipientsWithoutValidAddresses": {
                            "type": "array",
                            "description": "User IDs of recipients without valid addresses",
                            "items": {
                                "type": "string",
                                "description": "User IDs of recipients without valid addresses"
                            }
                        },
                        "blacklistedRecipientAddresses": {
                            "type": "array",
                            "description": "Blacklisted recipient addresses",
                            "items": {
                                "type": "string",
                                "description": "Blacklisted recipient addresses"
                            }
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "TestMailingRequestData": {
                    "required": [
                        "recipientIds",
                        "recipientListId"
                    ],
                    "type": "object",
                    "properties": {
                        "subject": {
                            "type": "string",
                            "description": "Subject of the test mailing (if mailing has a subject)."
                        },
                        "mimeType": {
                            "type": "string",
                            "description": "Mime type of the mailing during sending (use empty string to use the mime type of the mailing).",
                            "example": "text/plain, text/html, text/multipart"
                        },
                        "recipientListId": {
                            "type": "string",
                            "description": "Recipient list ID of the recipient list to be used for the test mailing."
                        },
                        "senderAddress": {
                            "type": "string",
                            "description": "Sender address for test mailing (if mailing has a sender address). Must not be empty if specified."
                        },
                        "recipientIds": {
                            "type": "array",
                            "description": "Comma-separated list of recipient IDs from the provided recipient list (\"recipientListId\"). If a recipient is not found in the recipient list, no test mailing will be sent to this recipient.",
                            "items": {
                                "type": "string",
                                "description": "Comma-separated list of recipient IDs from the provided recipient list (\"recipientListId\"). If a recipient is not found in the recipient list, no test mailing will be sent to this recipient."
                            }
                        }
                    }
                },
                "RestTrackingLink": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Tracking link ID",
                            "format": "int64"
                        },
                        "url": {
                            "type": "string",
                            "description": "Tracking link URL"
                        },
                        "htmlTracking": {
                            "type": "string",
                            "description": "Tracking state of a link in the HTML version",
                            "enum": [
                                "DEFAULT",
                                "ENABLED",
                                "DISABLED"
                            ]
                        },
                        "textTracking": {
                            "type": "string",
                            "description": "Tracking state of a link in the text version",
                            "enum": [
                                "DEFAULT",
                                "ENABLED",
                                "DISABLED"
                            ]
                        },
                        "description": {
                            "type": "string",
                            "description": "Tracking link description"
                        },
                        "htmlOccurrences": {
                            "type": "integer",
                            "description": "Link occurrences in the HTML version",
                            "format": "int32"
                        },
                        "textOccurrences": {
                            "type": "integer",
                            "description": "Link occurrences in the text version",
                            "format": "int32"
                        },
                        "clickProfileIds": {
                            "type": "array",
                            "description": "Click profile IDs",
                            "items": {
                                "type": "integer",
                                "description": "Click profile IDs",
                                "format": "int64"
                            }
                        },
                        "links": {
                            "type": "array",
                            "description": "Restful links",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Restful links"
                            }
                        }
                    }
                },
                "TrackingLinkConfigurationRequestData": {
                    "type": "object",
                    "properties": {
                        "htmlTracking": {
                            "type": "string",
                            "description": "Tracking state of a link in the HTML version",
                            "enum": [
                                "DEFAULT",
                                "ENABLED",
                                "DISABLED"
                            ]
                        },
                        "textTracking": {
                            "type": "string",
                            "description": "Tracking state of a link in the text version",
                            "enum": [
                                "DEFAULT",
                                "ENABLED",
                                "DISABLED"
                            ]
                        },
                        "clickProfileIds": {
                            "type": "array",
                            "description": "IDs of relevant click profiles. An empty list will remove all entries.",
                            "items": {
                                "type": "integer",
                                "description": "IDs of relevant click profiles. An empty list will remove all entries.",
                                "format": "int64"
                            }
                        },
                        "description": {
                            "type": "string",
                            "description": "Tracking link description"
                        }
                    }
                },
                "RestTrackingConfiguration": {
                    "type": "object",
                    "properties": {
                        "openTracking": {
                            "type": "boolean",
                            "description": "If true, opens are tracked"
                        },
                        "clickTracking": {
                            "type": "boolean",
                            "description": "If true, clicks are tracked"
                        },
                        "openTrackingOfPartiallyLoadedMessages": {
                            "type": "boolean",
                            "description": "If true, opens of partially loaded messages are tracked"
                        },
                        "defaultHtmlLinkTracking": {
                            "type": "boolean",
                            "description": "If true, links are tracked for the HTML version by default"
                        },
                        "defaultTextLinkTracking": {
                            "type": "boolean",
                            "description": "If true, links are tracked for the text version by default"
                        },
                        "links": {
                            "type": "array",
                            "description": "Restful links",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Restful links"
                            }
                        }
                    }
                },
                "TrackingConfigurationRequestData": {
                    "type": "object",
                    "properties": {
                        "defaultHtmlLinkTrackingEnabled": {
                            "type": "boolean",
                            "description": "If true, links are tracked for the HTML version by default"
                        },
                        "defaultTextLinkTrackingEnabled": {
                            "type": "boolean",
                            "description": "If true, links are tracked for the text version by default"
                        },
                        "clickTrackingEnabled": {
                            "type": "boolean",
                            "description": "If true, clicks are tracked"
                        },
                        "openTrackingEnabled": {
                            "type": "boolean",
                            "description": "If true, opens are tracked"
                        },
                        "openTrackingOfPartiallyLoadedMessagesEnabled": {
                            "type": "boolean",
                            "description": "If true, opens of partially loaded messages are tracked"
                        }
                    }
                },
                "MessageRequestData": {
                    "type": "object",
                    "properties": {
                        "deepLinkName": {
                            "type": "string",
                            "description": "This parameter is deprecated. Use \"payload.[name]\" instead."
                        },
                        "subjectForTargetGroup": {
                            "type": "string",
                            "description": "Subject for a specific target group. Set \"subject.[targetGroupId]\" in request data (only email).<p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "mediaType": {
                            "type": "string",
                            "description": "Media type of the mailing (required only for creation)",
                            "enum": [
                                "email",
                                "sms",
                                "push"
                            ]
                        },
                        "icon": {
                            "type": "string",
                            "description": "Icon for the Web Push message"
                        },
                        "description": {
                            "type": "string",
                            "description": "Mailing description"
                        },
                        "subject": {
                            "type": "string",
                            "description": "Mailing subject"
                        },
                        "payload": {
                            "type": "string",
                            "description": "Payload parameters for Mobile Push and Web Push. Set \"payload.[name]\" in request data.<p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "image": {
                            "type": "string",
                            "description": "Image for the Web Push message"
                        },
                        "mediaCode": {
                            "type": "string",
                            "description": "Media code (only email)"
                        },
                        "archiveEnabled": {
                            "type": "boolean",
                            "description": "Toggle whether a mailing can be archived or not (only applicable for transactional mailings)"
                        },
                        "senderAddress": {
                            "type": "string",
                            "description": "Mailing sender address"
                        },
                        "replyToAddress": {
                            "type": "string",
                            "description": "Reply-to address (only email)"
                        },
                        "expiry": {
                            "type": "string",
                            "description": "Expiry date (ISO 8601 format, only push mailings)",
                            "format": "date-time"
                        },
                        "pushType": {
                            "type": "string",
                            "description": "Push type",
                            "enum": [
                                "MOBILE",
                                "WEB"
                            ]
                        },
                        "replyToName": {
                            "type": "string",
                            "description": "Reply-to mailing name (only email)"
                        },
                        "senderName": {
                            "type": "string",
                            "description": "Mailing sender name (only email)"
                        },
                        "archivePeriod": {
                            "type": "string",
                            "description": "Period suggesting for how long a mailing should be archived (only applicable for transactional mailings)",
                            "enum": [
                                "ONE_MONTH",
                                "TWO_MONTHS",
                                "THREE_MONTHS",
                                "SIX_MONTHS",
                                "ONE_YEAR",
                                "TWO_YEARS"
                            ]
                        },
                        "resetReplyToAddress": {
                            "type": "boolean",
                            "description": "If true, the local part of the reply-to address is reset"
                        },
                        "resetTargetedSubjects": {
                            "type": "boolean",
                            "description": "If true, all target group subjects are deleted (only email)"
                        },
                        "iconMetaData": {
                            "type": "string",
                            "description": "Icon meta data. Configure \"icon.[attribute]\".<p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "clickAction": {
                            "type": "string",
                            "description": "Click action for the Web Push message"
                        },
                        "resetDeeplinks": {
                            "type": "boolean",
                            "description": "This parameter is deprecated. Use \"resetPayload\" instead."
                        },
                        "resetPayload": {
                            "type": "boolean",
                            "description": "If true, all payload parameters are deleted. All set parameters within this request remain (only Web Push mailings)."
                        },
                        "name": {
                            "type": "string",
                            "description": "Mailing name"
                        },
                        "content": {
                            "type": "string",
                            "description": "Mailing content (plain text)"
                        },
                        "predecessorNodeId": {
                            "type": "string",
                            "description": "Predecessor node"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node"
                        }
                    }
                },
                "RecipientListsRequestData": {
                    "required": [
                        "recipientListIds"
                    ],
                    "type": "object",
                    "properties": {
                        "recipientListIds": {
                            "type": "array",
                            "description": "Comma-separated list of recipient list IDs",
                            "items": {
                                "type": "integer",
                                "description": "Comma-separated list of recipient list IDs",
                                "format": "int64"
                            }
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node"
                        }
                    }
                },
                "CampaignMailingRestReport": {
                    "type": "object",
                    "properties": {
                        "campaignId": {
                            "type": "integer",
                            "description": "Mailing ID",
                            "format": "int64"
                        },
                        "campaignName": {
                            "type": "string",
                            "description": "Mailing name"
                        },
                        "recipients": {
                            "$ref": "#/components/schemas/RestRecipients"
                        },
                        "bounces": {
                            "$ref": "#/components/schemas/RestBounces"
                        },
                        "unsubscribes": {
                            "type": "integer",
                            "description": "Number of unique unsubscribes",
                            "format": "int32"
                        },
                        "opens": {
                            "$ref": "#/components/schemas/RestOpens"
                        },
                        "clicks": {
                            "$ref": "#/components/schemas/RestClicks"
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "RestBounces": {
                    "type": "object",
                    "properties": {
                        "hard": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "soft": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "description": "Number of hard and soft bounces"
                },
                "RestClicks": {
                    "type": "object",
                    "properties": {
                        "total": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "unique": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "description": "Number of unique and total clicks"
                },
                "RestOpens": {
                    "type": "object",
                    "properties": {
                        "total": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "unique": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "description": "Number of unique and total opens"
                },
                "RestRecipients": {
                    "type": "object",
                    "properties": {
                        "net": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "total": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "skipped": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "inQueue": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "description": "Number of total, skipped and in-queue recipients"
                },
                "RestReport": {
                    "type": "object",
                    "properties": {
                        "recipients": {
                            "$ref": "#/components/schemas/RestRecipients"
                        },
                        "clicks": {
                            "$ref": "#/components/schemas/RestClicks"
                        },
                        "opens": {
                            "$ref": "#/components/schemas/RestOpens"
                        },
                        "unsubscribes": {
                            "type": "integer",
                            "description": "Number of unique unsubscribes",
                            "format": "int32"
                        },
                        "bounces": {
                            "$ref": "#/components/schemas/RestBounces"
                        }
                    }
                },
                "RestSmartCampaignStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestSmartCampaign"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "CampaignRequestData": {
                    "type": "object",
                    "properties": {
                        "sourceCampaignId": {
                            "type": "integer",
                            "description": "ID of the campaign to be copied (only required for copying)",
                            "format": "int64"
                        },
                        "recipientListIds": {
                            "type": "array",
                            "description": "Comma-separated list of recipient list IDs",
                            "items": {
                                "type": "integer",
                                "description": "Comma-separated list of recipient list IDs",
                                "format": "int64"
                            }
                        },
                        "name": {
                            "type": "string",
                            "description": "Campaign name"
                        }
                    }
                },
                "SplitRequestData": {
                    "type": "object",
                    "properties": {
                        "optimization.enabled": {
                            "type": "boolean",
                            "description": "If true, the automatic optimization is activated"
                        },
                        "optimization.scheduledAt": {
                            "type": "string",
                            "description": "Dispatch time of the messages",
                            "format": "date-time"
                        },
                        "optimization.sto.enabled": {
                            "type": "boolean",
                            "description": "If true, send time optimization is enabled. The \"sto\" parameters are only considered if one of the \"optimization.scheduled\" parameters is provided."
                        },
                        "optimization.sto.type": {
                            "type": "string",
                            "description": "Type of send time optimization (can be combined with \"optimization.scheduledAt\" scheduler, DAY will be set by other)",
                            "enum": [
                                "DAY",
                                "WEEK"
                            ]
                        },
                        "optimization.sto.fallbackAt": {
                            "type": "string",
                            "description": "Fallback at time of send time optimization in ISO 8601 format (can be combined with \"optimization.scheduledAt\" scheduler)",
                            "format": "date-time"
                        },
                        "optimization.sto.optimizationEndsAt": {
                            "type": "string",
                            "description": "Optimization ends at time of send time optimization in ISO 8601 format (can be combined with \"optimization.scheduledAt\" scheduler)",
                            "format": "date-time"
                        },
                        "optimization.scheduledWithDelay": {
                            "type": "string",
                            "description": "Duration in ISO 8601",
                            "example": "P4DT3H2M (4 days, 3 hours, 2 minutes)"
                        },
                        "optimization.scheduledManually": {
                            "type": "boolean",
                            "description": "If true, the optimization is started manually"
                        },
                        "optimization.sto.period": {
                            "type": "string",
                            "description": "Duration of send time optimization in ISO 8601 format (only days (max. 1), hours and minutes (can be combined with \"optimization.scheduledWithDelay\" and \"optimization.scheduledManually\" schedulers)",
                            "example": "PT22H30M (22 hours 30 minutes)"
                        },
                        "optimization.mode": {
                            "type": "string",
                            "description": "Optimization mode",
                            "enum": [
                                "bestOpenRate",
                                "bestUniqueClickRate",
                                "bestClickRate",
                                "lowestUniqueUnsubscribe",
                                "lowestBounceRate",
                                "byPostClickValue"
                            ]
                        },
                        "predecessorNodeId": {
                            "type": "string",
                            "description": "Predecessor node"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node"
                        }
                    }
                },
                "RestDelay": {
                    "type": "object",
                    "properties": {
                        "days": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "hours": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "minutes": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "description": "Delay time"
                },
                "RestPersonalizedSchedule": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "If true, send time optimization is enabled"
                        },
                        "type": {
                            "type": "string",
                            "description": "Period of time that is used for optimizing the sending of messages",
                            "enum": [
                                "DAY",
                                "WEEK"
                            ]
                        },
                        "fallbackAt": {
                            "type": "string",
                            "description": "Fallback time",
                            "format": "date-time"
                        },
                        "optimizationEndsAt": {
                            "type": "string",
                            "description": "End time",
                            "format": "date-time"
                        },
                        "period": {
                            "$ref": "#/components/schemas/RestDelay"
                        }
                    },
                    "description": "Send time optimization settings"
                },
                "RestSplitNode": {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string",
                            "description": "Node ID"
                        },
                        "optimization": {
                            "$ref": "#/components/schemas/RestSplitOptimization"
                        },
                        "successors": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestSplitSuccessor"
                            }
                        },
                        "links": {
                            "type": "array",
                            "description": "Links for further requests",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Links for further requests"
                            }
                        },
                        "gridLocation": {
                            "$ref": "#/components/schemas/Point"
                        }
                    }
                },
                "RestSplitOptimization": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "If true, automatic optimization is enabled"
                        },
                        "mode": {
                            "type": "string",
                            "description": "Optimization mode",
                            "enum": [
                                "bestOpenRate",
                                "bestUniqueClickRate",
                                "bestClickRate",
                                "lowestUniqueUnsubscribe",
                                "lowestBounceRate",
                                "byPostClickValue"
                            ]
                        },
                        "scheduledAt": {
                            "type": "string",
                            "description": "Scheduled dispatch time",
                            "format": "date-time"
                        },
                        "sto": {
                            "$ref": "#/components/schemas/RestPersonalizedSchedule"
                        },
                        "scheduledWithDelay": {
                            "$ref": "#/components/schemas/RestDelay"
                        },
                        "scheduledManually": {
                            "type": "boolean",
                            "description": "If true, the optimization is started manually"
                        }
                    }
                },
                "RestSplitSuccessor": {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string",
                            "description": "Node ID"
                        },
                        "name": {
                            "type": "string",
                            "description": "Node name"
                        },
                        "targetGroup": {
                            "$ref": "#/components/schemas/Filter"
                        },
                        "relative": {
                            "type": "number",
                            "description": "Number of relative recipients in percent",
                            "format": "float"
                        },
                        "absolute": {
                            "type": "integer",
                            "description": "Number of absolute recipients",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "SplitSuccessorRequestData": {
                    "type": "object",
                    "properties": {
                        "relative": {
                            "type": "number",
                            "description": "Percentage of recipients to be contacted. Cannot be provided simultaneously with absolute value.",
                            "format": "float"
                        },
                        "absolute": {
                            "type": "integer",
                            "description": "Number of recipients to be contacted. Cannot be provided simultaneously with relative value.",
                            "format": "int32"
                        },
                        "targetGroup": {
                            "type": "string",
                            "description": "Target group definition as JSON, e.g. { \"targetGroup\": { \"id\": 123456 }}. Connect definitions by using the operators 'and', 'or' or 'not'."
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the target group"
                        },
                        "predecessorNodeId": {
                            "type": "string",
                            "description": "Predecessor node"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node"
                        }
                    }
                },
                "RestAnalysisData": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "description": "Number of recipients that can receive the mailing",
                            "format": "int32"
                        },
                        "analysisDate": {
                            "type": "string",
                            "description": "Start date of the analysis",
                            "format": "date-time"
                        },
                        "state": {
                            "type": "string",
                            "description": "Current state of the analysis",
                            "enum": [
                                "running",
                                "finished",
                                "failed"
                            ]
                        },
                        "childMailings": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer",
                                "description": "Number of recipients of the child mailings",
                                "format": "int32"
                            },
                            "description": "Number of recipients of the child mailings"
                        }
                    }
                },
                "BlockRequestData": {
                    "type": "object",
                    "properties": {
                        "customBlacklistIds": {
                            "type": "array",
                            "description": "Custom blacklist IDs.",
                            "items": {
                                "type": "integer",
                                "description": "Custom blacklist IDs.",
                                "format": "int64"
                            }
                        },
                        "predecessorNodeId": {
                            "type": "string",
                            "description": "Predecessor node"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node"
                        }
                    }
                },
                "RestBlockNode": {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string",
                            "description": "Node ID"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node ID"
                        },
                        "customBlacklistIds": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        },
                        "gridLocation": {
                            "$ref": "#/components/schemas/Point"
                        },
                        "links": {
                            "type": "array",
                            "description": "Links for further requests",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Links for further requests"
                            }
                        }
                    }
                },
                "CapRequestData": {
                    "type": "object",
                    "properties": {
                        "relative": {
                            "type": "number",
                            "description": "Percentage of recipients to be contacted. Cannot be provided simultaneously with absolute value.",
                            "format": "float"
                        },
                        "absolute": {
                            "type": "integer",
                            "description": "Number of recipients to be contacted. Cannot be provided simultaneously with relative value.",
                            "format": "int32"
                        },
                        "predecessorNodeId": {
                            "type": "string",
                            "description": "Predecessor node"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node"
                        }
                    }
                },
                "RestCapNode": {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string",
                            "description": "Node ID"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node ID"
                        },
                        "relative": {
                            "type": "number",
                            "description": "Relative number of recipients in percent",
                            "format": "float"
                        },
                        "absolute": {
                            "type": "integer",
                            "description": "Absolute number of recipients",
                            "format": "int32"
                        },
                        "gridLocation": {
                            "$ref": "#/components/schemas/Point"
                        },
                        "links": {
                            "type": "array",
                            "description": "Links for further requests",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Links for further requests"
                            }
                        }
                    }
                },
                "WaitRequestData": {
                    "type": "object",
                    "properties": {
                        "scheduledAfterRecipientImport": {
                            "type": "boolean",
                            "description": "If true, the scheduler is triggered after recipient import"
                        },
                        "scheduledAfterRecipientImportAtTime": {
                            "type": "string",
                            "description": "Scheduled after import time in ISO 8601 format"
                        },
                        "scheduledAt": {
                            "type": "string",
                            "description": "Scheduled time in ISO 8601 format",
                            "format": "date-time"
                        },
                        "sto.enabled": {
                            "type": "boolean",
                            "description": "If true, send time optimization is enabled. The \"sto\" parameters are only considered if one of the \"scheduled\" parameters is provided."
                        },
                        "sto.type": {
                            "type": "string",
                            "description": "Type of send time optimization (can be combined with \"scheduledAt\" scheduler; DAY will be set by other schedulers)",
                            "enum": [
                                "DAY",
                                "WEEK"
                            ]
                        },
                        "sto.fallbackAt": {
                            "type": "string",
                            "description": "Fallback at time of send time optimization in ISO 8601 format (can be combined with \"scheduledAt\" scheduler)",
                            "format": "date-time"
                        },
                        "sto.optimizationEndsAt": {
                            "type": "string",
                            "description": "Optimization ends at time of send time optimization in ISO 8601 format (can be combined with \"scheduledAt\" scheduler)",
                            "format": "date-time"
                        },
                        "sto.period": {
                            "type": "string",
                            "description": "Duration of send time optimization in ISO 8601 format (only days (max. 1), hours, and minute will be accepted (can be combined with \"scheduledAfterRecipientImport\" and \"scheduledAfterRecipientImportAtTime\" schedulers)",
                            "example": "PT22H30M (22 hours 30 minutes)"
                        },
                        "predecessorNodeId": {
                            "type": "string",
                            "description": "Predecessor node"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node"
                        }
                    }
                },
                "RestWaitNode": {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string",
                            "description": "Node ID"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node ID"
                        },
                        "scheduledAt": {
                            "type": "string",
                            "description": "Scheduled dispatch time",
                            "format": "date-time"
                        },
                        "sto": {
                            "$ref": "#/components/schemas/RestPersonalizedSchedule"
                        },
                        "scheduledAfterRecipientImport": {
                            "type": "boolean",
                            "description": "If true, messages are sent after the recipient import"
                        },
                        "scheduledAfterRecipientImportAtTime": {
                            "type": "string",
                            "description": "Time (in format HH:mm) messages are sent after the recipient import"
                        },
                        "gridLocation": {
                            "$ref": "#/components/schemas/Point"
                        },
                        "links": {
                            "type": "array",
                            "description": "Links for further requests",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Links for further requests"
                            }
                        }
                    }
                },
                "TargetGroupRequestData": {
                    "type": "object",
                    "properties": {
                        "targetGroup": {
                            "type": "string",
                            "description": "Target group definition as JSON, e.g. { \"targetGroup\": { \"id\": 123456 }}. Connect definitions by using the operators 'and', 'or' or 'not'."
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the target group"
                        },
                        "predecessorNodeId": {
                            "type": "string",
                            "description": "Predecessor node"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node"
                        }
                    }
                },
                "ThrottleRequestData": {
                    "type": "object",
                    "properties": {
                        "maxMessagesPerHour": {
                            "type": "integer",
                            "description": "Maximum number of messages per hour",
                            "format": "int32"
                        },
                        "predecessorNodeId": {
                            "type": "string",
                            "description": "Predecessor node"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node"
                        }
                    }
                },
                "RestThrottleNode": {
                    "type": "object",
                    "properties": {
                        "nodeId": {
                            "type": "string",
                            "description": "Node ID"
                        },
                        "successorNodeId": {
                            "type": "string",
                            "description": "Successor node ID"
                        },
                        "maxMessagesPerHour": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "gridLocation": {
                            "$ref": "#/components/schemas/Point"
                        },
                        "links": {
                            "type": "array",
                            "description": "Links for further requests",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Links for further requests"
                            }
                        }
                    }
                },
                "EventBasedMailingRequestData": {
                    "required": [
                        "content",
                        "recipientListIds",
                        "senderAddress",
                        "subject"
                    ],
                    "type": "object",
                    "properties": {
                        "recipientListIds": {
                            "type": "array",
                            "description": "Comma-separated list of recipient list IDs",
                            "items": {
                                "type": "integer",
                                "description": "Comma-separated list of recipient list IDs",
                                "format": "int64"
                            }
                        },
                        "subject": {
                            "type": "string",
                            "description": "Mailing subject"
                        },
                        "senderAddress": {
                            "type": "string",
                            "description": "Mailing sender address"
                        },
                        "content": {
                            "type": "string",
                            "description": "Mailing content (plain text)"
                        },
                        "deepLinkName": {
                            "type": "string",
                            "description": "This parameter is deprecated. Use \"payload.[name]\" instead."
                        },
                        "subjectForTargetGroup": {
                            "type": "string",
                            "description": "Subject for a specific target group. Set \"subject.[targetGroupId]\" in request data (only email).<p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "mediaType": {
                            "type": "string",
                            "description": "Media type of the mailing (required only for creation)",
                            "enum": [
                                "email",
                                "sms",
                                "push"
                            ]
                        },
                        "icon": {
                            "type": "string",
                            "description": "Icon for the Web Push message"
                        },
                        "description": {
                            "type": "string",
                            "description": "Mailing description"
                        },
                        "payload": {
                            "type": "string",
                            "description": "Payload parameters for Mobile Push and Web Push. Set \"payload.[name]\" in request data.<p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "image": {
                            "type": "string",
                            "description": "Image for the Web Push message"
                        },
                        "mediaCode": {
                            "type": "string",
                            "description": "Media code (only email)"
                        },
                        "archiveEnabled": {
                            "type": "boolean",
                            "description": "Toggle whether a mailing can be archived or not (only applicable for transactional mailings)"
                        },
                        "replyToAddress": {
                            "type": "string",
                            "description": "Reply-to address (only email)"
                        },
                        "expiry": {
                            "type": "string",
                            "description": "Expiry date (ISO 8601 format, only push mailings)",
                            "format": "date-time"
                        },
                        "pushType": {
                            "type": "string",
                            "description": "Push type",
                            "enum": [
                                "MOBILE",
                                "WEB"
                            ]
                        },
                        "replyToName": {
                            "type": "string",
                            "description": "Reply-to mailing name (only email)"
                        },
                        "senderName": {
                            "type": "string",
                            "description": "Mailing sender name (only email)"
                        },
                        "archivePeriod": {
                            "type": "string",
                            "description": "Period suggesting for how long a mailing should be archived (only applicable for transactional mailings)",
                            "enum": [
                                "ONE_MONTH",
                                "TWO_MONTHS",
                                "THREE_MONTHS",
                                "SIX_MONTHS",
                                "ONE_YEAR",
                                "TWO_YEARS"
                            ]
                        },
                        "resetReplyToAddress": {
                            "type": "boolean",
                            "description": "If true, the local part of the reply-to address is reset"
                        },
                        "iconMetaData": {
                            "type": "string",
                            "description": "Icon meta data. Configure \"icon.[attribute]\".<p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "clickAction": {
                            "type": "string",
                            "description": "Click action for the Web Push message"
                        },
                        "resetPayload": {
                            "type": "boolean",
                            "description": "If true, all payload parameters are deleted. All set parameters within this request remain (only Web Push mailings)."
                        },
                        "name": {
                            "type": "string",
                            "description": "Mailing name"
                        }
                    }
                },
                "SendTransactionalMailingRequestData": {
                    "required": [
                        "recipientId",
                        "recipientListId"
                    ],
                    "type": "object",
                    "properties": {
                        "personalizedAttachmentsToken": {
                            "type": "string",
                            "description": "Token of the attachment to be sent"
                        },
                        "data": {
                            "type": "string",
                            "description": "Recipient data. Configure \"data.[attribute]\" according to the corresponding recipient list field. <br>Example:<br> data.firstname: John<br>data.lastname: Smith<br>data.email: smith@example.com (only required if the email list field is not the address field)<br><p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "recipientId": {
                            "type": "string",
                            "description": "Email address or telephone number (for SMS). In case the id field is the address field in the recipient list the recipientId is sufficient. If not you have to provide the address in the request body."
                        },
                        "recipientListId": {
                            "type": "integer",
                            "description": "Transactional recipient list to which the recipient will be added",
                            "format": "int64"
                        }
                    }
                },
                "RestMailId": {
                    "type": "object",
                    "properties": {
                        "mailId": {
                            "type": "string",
                            "description": "Encoded mail ID"
                        }
                    }
                },
                "RestSendStatus": {
                    "type": "object",
                    "properties": {
                        "sendStatus": {
                            "type": "string",
                            "description": "Sending status"
                        },
                        "mailId": {
                            "type": "string",
                            "description": "Encoded mail ID"
                        }
                    }
                },
                "ClickProfileRequestData": {
                    "type": "object",
                    "properties": {
                        "description": {
                            "type": "string",
                            "description": "Description of the click profile"
                        },
                        "ruleType": {
                            "type": "string",
                            "description": "Rule type of the click profile",
                            "default": "NONE",
                            "enum": [
                                "REGEXP",
                                "WILDCARDS",
                                "NONE"
                            ]
                        },
                        "rulePattern": {
                            "type": "string",
                            "description": "Rule pattern of the click profile"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the click profile (required for creation)"
                        }
                    }
                },
                "RestClickProfile": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Click profile ID",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string",
                            "description": "Click profile name"
                        },
                        "description": {
                            "type": "string",
                            "description": "Click profile description"
                        },
                        "rulePattern": {
                            "type": "string",
                            "description": "Click profile rule pattern"
                        },
                        "ruleType": {
                            "type": "string",
                            "description": "Click profile rule type"
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Modification date",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "description": "Restful links",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Restful links"
                            }
                        }
                    }
                },
                "AssignLinksToClickProfileRequestData": {
                    "required": [
                        "linkIds"
                    ],
                    "type": "object",
                    "properties": {
                        "linkIds": {
                            "type": "array",
                            "description": "Comma-separated list of link IDs",
                            "items": {
                                "type": "integer",
                                "description": "Comma-separated list of link IDs",
                                "format": "int64"
                            }
                        }
                    }
                },
                "RestLink": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Link ID",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string",
                            "description": "Link name"
                        },
                        "url": {
                            "type": "string",
                            "description": "Link URL"
                        },
                        "type": {
                            "type": "string",
                            "description": "Link type"
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Modification date",
                            "format": "date-time"
                        }
                    }
                },
                "RestLinkStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestLink"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "RestClickProfileStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestClickProfile"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "CouponBlockRequestData": {
                    "required": [
                        "couponSource",
                        "name"
                    ],
                    "type": "object",
                    "properties": {
                        "couponSource": {
                            "type": "string",
                            "description": "Coupon source of the coupon block",
                            "enum": [
                                "static",
                                "generated",
                                "ean13barcode",
                                "twooffivebarcode",
                                "code128barcode",
                                "code128abarcode",
                                "code128bbarcode",
                                "code128cbarcode"
                            ]
                        },
                        "useRealCodesForTestMails": {
                            "type": "boolean",
                            "description": "If true, valid codes for test mails are used"
                        },
                        "name": {
                            "type": "string",
                            "description": "Internal name of the coupon block"
                        }
                    }
                },
                "RestCouponBlock": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Coupon block ID",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string",
                            "description": "Coupon block name"
                        },
                        "couponSource": {
                            "type": "string",
                            "description": "Coupon source of the coupon block"
                        },
                        "useRealCodesForTestMails": {
                            "type": "boolean",
                            "description": "If true, valid codes for test mails are used"
                        },
                        "counter": {
                            "$ref": "#/components/schemas/RestCouponBlockCounter"
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Modification date",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "description": "Restful links",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Restful links"
                            }
                        }
                    }
                },
                "RestCouponBlockCounter": {
                    "type": "object",
                    "properties": {
                        "codeCount": {
                            "type": "integer",
                            "description": "Number of all coupon codes",
                            "format": "int64"
                        },
                        "assigned": {
                            "type": "integer",
                            "description": "Number of all assigned coupon codes",
                            "format": "int64"
                        },
                        "unassigned": {
                            "type": "integer",
                            "description": "Number of all available coupon codes",
                            "format": "int64"
                        }
                    },
                    "description": "Counter of coupon codes"
                },
                "CouponCodeRequestData": {
                    "required": [
                        "codes"
                    ],
                    "type": "object",
                    "properties": {
                        "codes": {
                            "type": "array",
                            "description": "List of coupon codes",
                            "items": {
                                "type": "string",
                                "description": "List of coupon codes"
                            }
                        }
                    }
                },
                "RestCouponCode": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string",
                            "description": "Coupon code"
                        },
                        "assignedMailing": {
                            "type": "integer",
                            "description": "Mailing assigned to the coupon code",
                            "format": "int64"
                        },
                        "assignedRecipient": {
                            "type": "string",
                            "description": "Recipient assigned to the coupon code"
                        },
                        "assigned": {
                            "type": "boolean",
                            "description": "If true, the code of the coupon block is assigned to a mailing"
                        },
                        "used": {
                            "type": "boolean",
                            "description": "If true, the code of the coupon block was used"
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Modification date",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "description": "Restful links",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Restful links"
                            }
                        }
                    }
                },
                "RestCouponCodeStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestCouponCode"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "RestAssignedMailings": {
                    "type": "object",
                    "properties": {
                        "mailingIds": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                },
                "RestCouponBlockStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestCouponBlock"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "CustomBlacklistRequestData": {
                    "type": "object",
                    "properties": {
                        "hashAlgorithm": {
                            "type": "string",
                            "description": "Hash algorithm to be used. NONE by default.",
                            "enum": [
                                "NONE",
                                "MD5",
                                "SHA1",
                                "SHA2_256",
                                "SHA2_512",
                                "SHA2_256_OF_MD5_AND_DATA"
                            ]
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the custom blocklist (required for creation)"
                        }
                    }
                },
                "RestCustomBlacklist": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Custom blocklist ID",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the custom blocklist"
                        },
                        "hashAlgorithm": {
                            "type": "string",
                            "description": "Hash algorithm of the custom blocklist",
                            "enum": [
                                "NONE",
                                "MD5",
                                "SHA1",
                                "SHA2_256",
                                "SHA2_512",
                                "SHA2_256_OF_MD5_AND_DATA"
                            ]
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Modification date",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "description": "Restful links",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Restful links"
                            }
                        }
                    }
                },
                "CreateCustomBlacklistEntriesRequestData": {
                    "required": [
                        "patterns"
                    ],
                    "type": "object",
                    "properties": {
                        "patterns": {
                            "type": "array",
                            "description": "Patterns of the custom blocklist entries",
                            "items": {
                                "type": "string",
                                "description": "Patterns of the custom blocklist entries"
                            }
                        },
                        "reason": {
                            "type": "string",
                            "description": "Reason for creating a custom blocklist entry"
                        }
                    }
                },
                "RestCustomBlacklistEntry": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "pattern": {
                            "type": "string",
                            "description": "Pattern for all mailing addresses that push into a custom blocklist"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Reason for adding a pattern into a custom blocklist"
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Modification date",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "CustomBlacklistEntryRequestData": {
                    "type": "object",
                    "properties": {
                        "reason": {
                            "type": "string",
                            "description": "Reason for creating a custom blocklist entry"
                        }
                    }
                },
                "RestCustomBlacklistEntryStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestCustomBlacklistEntry"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "RestCustomBlacklistStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestCustomBlacklist"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "RestConfiguredJob": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the scheduled job"
                        },
                        "description": {
                            "type": "string",
                            "description": "Description of the scheduled job"
                        },
                        "type": {
                            "type": "string",
                            "description": "Type of the scheduled job"
                        },
                        "jobData": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "triggers": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestJobTrigger"
                            }
                        }
                    }
                },
                "RestConfiguredJobStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestConfiguredJob"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "RestJobTrigger": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Trigger name"
                        },
                        "state": {
                            "type": "string",
                            "description": "Trigger status"
                        },
                        "nextFireTime": {
                            "type": "string",
                            "description": "Date and time of the next trigger fire",
                            "format": "date-time"
                        },
                        "lastFiredTime": {
                            "type": "string",
                            "description": "Date and time of the last trigger fire",
                            "format": "date-time"
                        },
                        "started": {
                            "type": "string",
                            "description": "Start date and time of the trigger",
                            "format": "date-time"
                        },
                        "finished": {
                            "type": "string",
                            "description": "Finish date and time of the trigger",
                            "format": "date-time"
                        }
                    }
                },
                "RestRunningJob": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the running scheduled job"
                        },
                        "started": {
                            "type": "string",
                            "description": "Start date and time of the scheduled job",
                            "format": "date-time"
                        },
                        "elapsedRunningTime": {
                            "type": "object",
                            "properties": {
                                "seconds": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "units": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "duration": {
                                                "type": "object",
                                                "properties": {
                                                    "seconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "nano": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "negative": {
                                                        "type": "boolean"
                                                    },
                                                    "zero": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            },
                                            "durationEstimated": {
                                                "type": "boolean"
                                            },
                                            "dateBased": {
                                                "type": "boolean"
                                            },
                                            "timeBased": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                },
                                "nano": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "negative": {
                                    "type": "boolean"
                                },
                                "zero": {
                                    "type": "boolean"
                                }
                            },
                            "description": "Elapsed running time of the scheduled job"
                        }
                    }
                },
                "RestRunningJobStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestRunningJob"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "FolderRequestData": {
                    "type": "object",
                    "properties": {
                        "folderType": {
                            "type": "string",
                            "description": "Folder type (required for creation)",
                            "enum": [
                                "mailing",
                                "messageTemplate",
                                "customBlacklist",
                                "image"
                            ]
                        },
                        "parentId": {
                            "type": "integer",
                            "description": "ID of the parent folder",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string",
                            "description": "Folder name (required for creation)"
                        }
                    }
                },
                "RestFolder": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Folder ID",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string",
                            "description": "Folder name"
                        },
                        "parentId": {
                            "type": "integer",
                            "description": "Parent folder ID",
                            "format": "int64"
                        },
                        "childrenIds": {
                            "type": "array",
                            "description": "IDs of children folders",
                            "items": {
                                "type": "integer",
                                "description": "IDs of children folders",
                                "format": "int64"
                            }
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "description": "Restful links",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Restful links"
                            }
                        }
                    }
                },
                "UnAssignEntityToFolderRequestData": {
                    "required": [
                        "entityId"
                    ],
                    "type": "object",
                    "properties": {
                        "entityId": {
                            "type": "integer",
                            "description": "ID of the entity to be assigned or unassigned",
                            "format": "int64"
                        }
                    }
                },
                "RestFolderStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestFolder"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "RestArchiveMail": {
                    "type": "object",
                    "properties": {
                        "mailingGroupId": {
                            "type": "integer",
                            "description": "Client ID",
                            "format": "int64"
                        },
                        "mailingType": {
                            "type": "string",
                            "description": "Mailing type"
                        },
                        "mailingToUserId": {
                            "type": "integer",
                            "description": "MailingToUser ID",
                            "format": "int64"
                        },
                        "properties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "description": "Metadata"
                            },
                            "description": "Metadata"
                        },
                        "created": {
                            "type": "string",
                            "description": "Date and time of creation",
                            "format": "date-time"
                        }
                    }
                },
                "RestMailIdInfo": {
                    "type": "object",
                    "properties": {
                        "mailingId": {
                            "type": "integer",
                            "description": "Mailing ID",
                            "format": "int64"
                        },
                        "recipientListId": {
                            "type": "integer",
                            "description": "Recipient list ID",
                            "format": "int64"
                        },
                        "recipientId": {
                            "type": "string",
                            "description": "Recipient ID"
                        },
                        "links": {
                            "type": "array",
                            "description": "Restful links",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Restful links"
                            }
                        }
                    }
                },
                "MessageTemplateRequestData": {
                    "type": "object",
                    "properties": {
                        "subjectForTargetGroup": {
                            "type": "string",
                            "description": "Subject specific to the target group. Set 'subject.[targetGroupId]' in request data (only email).<p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "cmsContentTemplateId": {
                            "type": "string",
                            "description": "ID of source content template"
                        },
                        "messageTemplateIdForCreate": {
                            "type": "integer",
                            "description": "ID of source message template for creation",
                            "format": "int64"
                        },
                        "messageTemplateIdForCopy": {
                            "type": "integer",
                            "description": "ID of source message template for copying",
                            "format": "int64"
                        },
                        "subject": {
                            "type": "string",
                            "description": "Mailing subject (only email)"
                        },
                        "mailingId": {
                            "type": "integer",
                            "description": "ID of source mailing",
                            "format": "int64"
                        },
                        "senderAddress": {
                            "type": "string",
                            "description": "Mailing sender address"
                        },
                        "replyToAddress": {
                            "type": "string",
                            "description": "Reply-to address (only email)"
                        },
                        "replyToName": {
                            "type": "string",
                            "description": "Reply-to mailing name (only email)"
                        },
                        "senderName": {
                            "type": "string",
                            "description": "Mailing sender name (only email)"
                        },
                        "resetReplyToAddress": {
                            "type": "boolean",
                            "description": "Reset the local part of the reply-to address"
                        },
                        "resetTargetedSubjects": {
                            "type": "boolean",
                            "description": "If true, all target groups subjects are deleted (only email)"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the message template (required for creation)"
                        }
                    }
                },
                "RestMessageTemplate": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Message template ID",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string",
                            "description": "Message template name"
                        },
                        "contentId": {
                            "type": "string",
                            "description": "Content ID of the message template"
                        },
                        "contentTemplate": {
                            "type": "string",
                            "description": "Content template"
                        },
                        "mediaType": {
                            "type": "string",
                            "description": "Media type of the message template"
                        },
                        "senderAddress": {
                            "type": "string",
                            "description": "Email address of the sender"
                        },
                        "senderName": {
                            "type": "string",
                            "description": "Sender name",
                            "example": "Episerver GmbH"
                        },
                        "replyToAddress": {
                            "type": "string",
                            "description": "Email address for reply mails"
                        },
                        "replyToName": {
                            "type": "string",
                            "description": "Name for reply mails"
                        },
                        "subject": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "description": "Subjects"
                            },
                            "description": "Subjects"
                        },
                        "format": {
                            "type": "string",
                            "description": "Format"
                        },
                        "dispatchOption": {
                            "type": "string",
                            "description": "Dispatch option of the message template"
                        },
                        "dispatchStrategyOption": {
                            "type": "string",
                            "description": "Dispatch strategy option of the message template"
                        },
                        "accumulateMessagesForDays": {
                            "type": "integer",
                            "description": "Number of messages per day",
                            "format": "int32"
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Modification date",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "description": "Restful links",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Restful links"
                            }
                        }
                    }
                },
                "MessageTemplateTestMailingRequestData": {
                    "required": [
                        "recipientIds",
                        "recipientListId"
                    ],
                    "type": "object",
                    "properties": {
                        "subject": {
                            "type": "string",
                            "description": "Subject of a test message template (if message template has a subject set)"
                        },
                        "mimeType": {
                            "type": "string",
                            "description": "Mime type of the mailing during sending (use an empty string for the mailing mime type)",
                            "example": "text/plain, text/html, text/multipart"
                        },
                        "recipientListId": {
                            "type": "integer",
                            "description": "ID of the recipient list for the test mailing",
                            "format": "int64"
                        },
                        "senderAddress": {
                            "type": "string",
                            "description": "Sender address for test message template (if message template has a sender address set)"
                        },
                        "recipientIds": {
                            "type": "array",
                            "description": "Comma-separated list of recipient IDs from the provided recipient list (\"recipientListId\"). If a recipient is not found in the provided recipient list, no test mailing will be sent to this recipient.",
                            "items": {
                                "type": "string",
                                "description": "Comma-separated list of recipient IDs from the provided recipient list (\"recipientListId\"). If a recipient is not found in the provided recipient list, no test mailing will be sent to this recipient."
                            }
                        }
                    }
                },
                "MessageTemplateTestResponse": {
                    "type": "object",
                    "properties": {
                        "mailingId": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                },
                "RestMessageTemplateStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestMessageTemplate"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "OptinProcessRequestData": {
                    "type": "object",
                    "properties": {
                        "confirmationMailingId": {
                            "type": "integer",
                            "description": "ID of the mailing that is used for the opt-in process (only opt-in processes of type \"confirmed\" or \"double\")",
                            "format": "int64"
                        },
                        "description": {
                            "type": "string",
                            "description": "Internal description of the opt-in process"
                        },
                        "confirmationUrl": {
                            "type": "string",
                            "description": "URL of the confirmation page to which the recipient is directed to complete the registration process (only opt-in processes of type \"double\")"
                        },
                        "name": {
                            "type": "string",
                            "description": "Internal name of the opt-in process (required for creation)"
                        },
                        "type": {
                            "type": "string",
                            "description": "Type of the opt-in process (required for creation)",
                            "enum": [
                                "single",
                                "confirmed",
                                "double"
                            ]
                        }
                    }
                },
                "RestOptinProcess": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "ID of the opt-in process",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the opt-in process"
                        },
                        "description": {
                            "type": "string",
                            "description": "Description of the opt-in process"
                        },
                        "type": {
                            "type": "string",
                            "description": "Type of the opt-in process"
                        },
                        "confirmationMailingId": {
                            "type": "integer",
                            "description": "ID of the mailing that sends the confirmation email (only opt-in processes of the type \"double\" or \"confirmed\")",
                            "format": "int64"
                        },
                        "confirmationUrl": {
                            "type": "string",
                            "description": "Confirmation URL of the opt-in process (only opt-in processes of the type \"double\")"
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Modification date",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "description": "Restful links",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Restful links"
                            }
                        }
                    }
                },
                "RestOptinProcessStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestOptinProcess"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "CopyRecipientListRequestData": {
                    "required": [
                        "sourceRecipientListId"
                    ],
                    "type": "object",
                    "properties": {
                        "sourceRecipientListId": {
                            "type": "integer",
                            "description": "ID of the recipient list to be copied",
                            "format": "int64"
                        }
                    }
                },
                "RestRecipientList": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Recipient list ID",
                            "format": "int64"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the recipient list"
                        },
                        "description": {
                            "type": "string",
                            "description": "Description of the recipient list"
                        },
                        "recipients": {
                            "type": "integer",
                            "description": "Number of recipients",
                            "format": "int32"
                        },
                        "mediaTypes": {
                            "type": "array",
                            "description": "Media types of the recipient list",
                            "items": {
                                "type": "string",
                                "description": "Media types of the recipient list"
                            }
                        },
                        "testList": {
                            "type": "boolean",
                            "description": "If true, the recipient list is a test list"
                        },
                        "forTransactionApi": {
                            "type": "boolean",
                            "description": "If true, the recipient list is suitable for transactional mails"
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Modification date",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "RestRecipientListAttributeNames": {
                    "type": "object",
                    "properties": {
                        "attributeNames": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "RecipientListRequestData": {
                    "type": "object",
                    "properties": {
                        "description": {
                            "type": "string",
                            "description": "Description of the recipient list"
                        },
                        "testList": {
                            "type": "boolean",
                            "description": "If true, the recipient list is a test list"
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the recipient list"
                        }
                    }
                },
                "RestRecipientListStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestRecipientList"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "CreateRecipientRequestData": {
                    "required": [
                        "recipientId"
                    ],
                    "type": "object",
                    "properties": {
                        "returnOptInMailId": {
                            "type": "boolean",
                            "description": "Retrieve the mail ID for an opt-in process of type \"double\" or \"confirmed\"",
                            "default": false
                        },
                        "data": {
                            "type": "string",
                            "description": "Recipient data. Configure \"data.[attribute]\" according to the corresponding recipient list field.<p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "optinProcessId": {
                            "type": "integer",
                            "description": "ID of the opt-in process",
                            "format": "int64"
                        },
                        "address": {
                            "type": "string",
                            "description": "Address of the recipient. Required if ID attribute differs from the address."
                        },
                        "recipientId": {
                            "type": "string",
                            "description": "Recipient ID (usually the email address)"
                        }
                    }
                },
                "RestRecipient": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Recipient ID"
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Modification date",
                            "format": "date-time"
                        },
                        "optInMailId": {
                            "type": "string",
                            "description": "Mail ID in case of double/confirmed opt-in process"
                        },
                        "links": {
                            "type": "array",
                            "description": "Restful links",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Restful links"
                            }
                        }
                    }
                },
                "CreateRecipientsRequestData": {
                    "type": "object",
                    "properties": {
                        "optinProcessId": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "recipients": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ExtendedRecipient"
                            }
                        }
                    }
                },
                "ExtendedRecipient": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "data": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    }
                },
                "RestRecipientsCreationModify": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "failedIds": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "RestAttributeValuesWithCount": {
                    "type": "object",
                    "properties": {
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "RestAttributeValues": {
                    "type": "object",
                    "properties": {
                        "attributeValues": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "Recipient": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "data": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    }
                },
                "UpdateRecipientsRequestData": {
                    "type": "object",
                    "properties": {
                        "recipients": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Recipient"
                            }
                        },
                        "updateMode": {
                            "type": "string",
                            "enum": [
                                "set",
                                "prepend",
                                "append"
                            ]
                        }
                    }
                },
                "ModifyRecipientsAttributesRequestData": {
                    "required": [
                        "targetGroup"
                    ],
                    "type": "object",
                    "properties": {
                        "targetGroup": {
                            "type": "integer",
                            "description": "ID of the matching target group",
                            "format": "int64"
                        },
                        "data": {
                            "type": "string",
                            "description": "Recipient data. Configure \"data.[attribute]\" according to the corresponding recipient list field.<p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "mode": {
                            "type": "string",
                            "description": "Mode for adding parameters to fields of type \"String\"<p><i>Available values:</i> set (to overwrite existing), prepend (to place before existing), append (to place after existing)</p>",
                            "enum": [
                                "set",
                                "prepend",
                                "append"
                            ]
                        }
                    }
                },
                "RestRecipientValid": {
                    "type": "object",
                    "properties": {
                        "valid": {
                            "type": "boolean",
                            "description": "If true, the recipient can receive mailings"
                        },
                        "recipientListId": {
                            "type": "integer",
                            "description": "Recipient list ID",
                            "format": "int64"
                        },
                        "links": {
                            "type": "array",
                            "description": "Restful links",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "description": "Restful links"
                            }
                        },
                        "validationFailedReason": {
                            "type": "string",
                            "description": "Reason for a failed recipient validation",
                            "enum": [
                                "blacklisted",
                                "bounced",
                                "unsubscribed",
                                "not_found"
                            ]
                        }
                    }
                },
                "ModifyRecipientAttributesRequestData": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "string",
                            "description": "Recipient data. Configure \"data.[attribute]\" according to the corresponding recipient list field.<p>Does not work with the \"Try it out\" feature.</p>"
                        },
                        "mode": {
                            "type": "string",
                            "description": "Mode for adding parameters to fields of type \"String\"<p><i>Available values:</i> set (to overwrite existing), prepend (to place before existing), append (to place after existing)</p>",
                            "enum": [
                                "set",
                                "prepend",
                                "append"
                            ]
                        }
                    }
                },
                "RestRecipientStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestRecipient"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "RecipientBasedRequestData": {
                    "required": [
                        "recipientId"
                    ],
                    "type": "object",
                    "properties": {
                        "recipientId": {
                            "type": "string",
                            "description": "Recipient ID (usually the email address)"
                        }
                    }
                },
                "UpdateRecipientIdRequestData": {
                    "required": [
                        "recipientId"
                    ],
                    "type": "object",
                    "properties": {
                        "newRecipientId": {
                            "type": "string",
                            "description": "New recipient ID"
                        },
                        "recipientId": {
                            "type": "string",
                            "description": "Recipient ID (usually the email address)"
                        }
                    }
                },
                "RestBounceCounterThresholdExceeded": {
                    "type": "object",
                    "properties": {
                        "exceeded": {
                            "type": "boolean",
                            "description": "If true, the recipient has exceeded the hard or the soft bounce threshold"
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "RestResponse": {
                    "type": "object",
                    "properties": {
                        "mailId": {
                            "type": "string",
                            "description": "Encoded mail ID"
                        },
                        "mailingId": {
                            "type": "integer",
                            "description": "Mailing ID",
                            "format": "int64"
                        },
                        "recipientListId": {
                            "type": "integer",
                            "description": "Recipient list ID",
                            "format": "int64"
                        },
                        "recipientId": {
                            "type": "string",
                            "description": "Recipient ID"
                        },
                        "category": {
                            "type": "string",
                            "description": "Response type"
                        },
                        "subject": {
                            "type": "string",
                            "description": "Response subject"
                        },
                        "ruleName": {
                            "type": "string",
                            "description": "Rule name of the response"
                        },
                        "mediaType": {
                            "type": "string",
                            "description": "Media type of the response",
                            "enum": [
                                "EMAIL",
                                "FAX",
                                "SMS",
                                "LETTER",
                                "PUSH",
                                "PRINT"
                            ]
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        }
                    }
                },
                "RestResponseStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestResponse"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "CreateUnsubscribesRequestData": {
                    "type": "object",
                    "properties": {
                        "mailIds": {
                            "type": "array",
                            "description": "Comma-separated list of mail IDs (only required if the \"recipientIds\" parameter is not specified)",
                            "items": {
                                "type": "string",
                                "description": "Comma-separated list of mail IDs (only required if the \"recipientIds\" parameter is not specified)"
                            }
                        },
                        "mediaType": {
                            "type": "string",
                            "description": "Media type of the delivery channel<p><i>Default value</i> : GLOBAL</p>",
                            "enum": [
                                "EMAIL",
                                "FAX",
                                "SMS",
                                "LETTER",
                                "PUSH",
                                "PRINT"
                            ]
                        },
                        "recipientListId": {
                            "type": "integer",
                            "description": "ID of the recipient list to which the recipients are assigned (only if recipient list based unsubscribe is set)",
                            "format": "int64"
                        },
                        "recipientIds": {
                            "type": "array",
                            "description": "Comma-separated list of recipient IDs (only required if the \"mailIds\" parameter is not specified)",
                            "items": {
                                "type": "string",
                                "description": "Comma-separated list of recipient IDs (only required if the \"mailIds\" parameter is not specified)"
                            }
                        }
                    }
                },
                "RestUnsubscribesCreateResult": {
                    "type": "object",
                    "properties": {
                        "successfulIds": {
                            "type": "array",
                            "description": "Successfully unsubscribed IDs",
                            "items": {
                                "type": "string",
                                "description": "Successfully unsubscribed IDs"
                            }
                        },
                        "unsuccessfulIds": {
                            "type": "array",
                            "description": "Unsuccessfully unsubscribed IDs",
                            "items": {
                                "type": "string",
                                "description": "Unsuccessfully unsubscribed IDs"
                            }
                        }
                    }
                },
                "RestUnsubscribe": {
                    "type": "object",
                    "properties": {
                        "recipientListId": {
                            "type": "integer",
                            "description": "ID of the recipient list to which the recipients are assigned (only if recipient list based unsubscribe is set)",
                            "format": "int64"
                        },
                        "recipientId": {
                            "type": "string",
                            "description": "Recipient ID"
                        },
                        "mailingId": {
                            "type": "integer",
                            "description": "Mailing ID",
                            "format": "int64"
                        },
                        "reason": {
                            "type": "string",
                            "description": "Unsubscribe reason"
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "links": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "uriBuilder": {
                                        "type": "object"
                                    },
                                    "rels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "params": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "uri": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "rel": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "mediaType": {
                            "type": "string",
                            "description": "Media type of the delivery channel<p><i>Default value</i> : GLOBAL</p>"
                        }
                    }
                },
                "RestUnsubscribeStreamingCollection": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "elements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RestUnsubscribe"
                            }
                        },
                        "limit": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "links": {
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                                "$ref": "#/components/schemas/RestApiLink"
                            }
                        },
                        "offset": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "UserRequestData": {
                    "required": [
                        "password",
                        "username"
                    ],
                    "type": "object",
                    "properties": {
                        "password": {
                            "type": "string",
                            "description": "New password"
                        },
                        "username": {
                            "type": "string",
                            "description": "Campaign user name"
                        }
                    }
                },
                "RestUser": {
                    "type": "object",
                    "properties": {
                        "userName": {
                            "type": "string",
                            "description": "User Name"
                        },
                        "lastPasswordChange": {
                            "type": "string",
                            "description": "Date of last password change",
                            "format": "date-time"
                        }
                    }
                },
                "RestWebhook": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Webhook ID",
                            "format": "int64"
                        },
                        "type": {
                            "type": "string",
                            "description": "Type of the event data",
                            "enum": [
                                "open",
                                "click",
                                "sent",
                                "bounce",
                                "unsubscribe",
                                "spamcomplaint"
                            ]
                        },
                        "status": {
                            "type": "string",
                            "description": "Webhook status",
                            "enum": [
                                "created",
                                "activated",
                                "deactivated",
                                "deleted",
                                "suspended"
                            ]
                        },
                        "format": {
                            "type": "string",
                            "description": "Data format of the event data",
                            "enum": [
                                "json"
                            ]
                        },
                        "targetUrl": {
                            "type": "string",
                            "description": "Target URL"
                        },
                        "authentication": {
                            "$ref": "#/components/schemas/WebhookAuthentication"
                        },
                        "created": {
                            "type": "string",
                            "description": "Creation date",
                            "format": "date-time"
                        },
                        "modified": {
                            "type": "string",
                            "description": "Modification date",
                            "format": "date-time"
                        }
                    }
                },
                "WebhookAuthentication": {
                    "required": [
                        "type"
                    ],
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        }
                    },
                    "description": "Authentication method and attributes",
                    "discriminator": {
                        "propertyName": "type"
                    }
                },
                "WebhookRequestData": {
                    "required": [
                        "format",
                        "targetUrl",
                        "type"
                    ],
                    "type": "object",
                    "properties": {
                        "basicAuthUsername": {
                            "type": "string",
                            "description": "User name for Basic HTTP Authentication. This parameter is deprecated and might be removed in the near future. Please use &lt;authentication&gt; instead."
                        },
                        "basicAuthPassword": {
                            "type": "string",
                            "description": "Password for Basic HTTP Authentication. This parameter is deprecated and might be removed in the near future. Please use &lt;authentication&gt; instead."
                        },
                        "format": {
                            "type": "string",
                            "description": "Data format in which the event data is to be sent",
                            "enum": [
                                "json"
                            ]
                        },
                        "targetUrl": {
                            "type": "string",
                            "description": "Target URL to which the event data is to be sent<p><b>Note:</b> The URL must be accessible and able to receive data via HTTP POST requests from the IP address 193.169.180.1 at any time. Use the current HTTPS version and standard port 443 for HTTPS connections.</p>"
                        },
                        "authentication": {
                            "type": "string",
                            "description": "Authentication method and attributes as json.<br>Current Annotations are:<br><pre>{\"type\":\"none\"}</pre>or<br><pre>{\"type\":\"basicAuth\",\"userName\":\"user\",\"password\":\"xxxxxxx\"}</pre>"
                        },
                        "type": {
                            "type": "string",
                            "description": "Event data type",
                            "enum": [
                                "open",
                                "click",
                                "sent",
                                "bounce",
                                "unsubscribe",
                                "spamcomplaint"
                            ]
                        }
                    }
                },
                "RestWebhookVerify": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Webhook ID",
                            "format": "int64"
                        },
                        "httpStatusCode": {
                            "type": "integer",
                            "description": "HTTP status code",
                            "format": "int32"
                        },
                        "responseBody": {
                            "type": "string",
                            "description": "Response body (if any)"
                        },
                        "numberOfEvents": {
                            "type": "integer",
                            "description": "Number of events sent to the target url",
                            "format": "int32"
                        },
                        "targetUrl": {
                            "type": "string",
                            "description": "Target URL"
                        }
                    }
                }
            },
            "securitySchemes": {
                "Authorization": {
                    "type": "apiKey",
                    "name": "Authorization",
                    "in": "header"
                }
            }
        }
}